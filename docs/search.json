[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Hematology Disease Analysis",
    "section": "",
    "text": "Explore the raw data with metadata, extract the information of interest and convert to Summarized Experiment object\n\nDiann and Spectronaut\n\n\n\n\nCompare Diann and Spectronaut quality.\n\nComparison of Diann and Spectronaut\n\n\n\n\nValues: apply filtering, variance stabilizing normalization, imputation, dimension reduction, batch removal and visualization.\n\nDiann\nSpectronaut\n\n\n\n\n\nDiann"
  },
  {
    "objectID": "index.html#preparatory-data-analysis",
    "href": "index.html#preparatory-data-analysis",
    "title": "Hematology Disease Analysis",
    "section": "",
    "text": "Explore the raw data with metadata, extract the information of interest and convert to Summarized Experiment object\n\nDiann and Spectronaut\n\n\n\n\nCompare Diann and Spectronaut quality.\n\nComparison of Diann and Spectronaut\n\n\n\n\nValues: apply filtering, variance stabilizing normalization, imputation, dimension reduction, batch removal and visualization.\n\nDiann\nSpectronaut\n\n\n\n\n\nDiann"
  },
  {
    "objectID": "Diann_QC.html",
    "href": "Diann_QC.html",
    "title": "Diann_QC",
    "section": "",
    "text": "load(\"output/seDiann.RData\")\ndiagOrd &lt;- colData(seDiann) %&gt;% \n  as_tibble(rownames = \"smpID\") %&gt;% \n  group_by(diag) %&gt;%\n  summarise(n = length(smpID)) %&gt;% \n  arrange(desc(n)) %&gt;%\n  pull(diag)\nsmpAnno &lt;- colData(seDiann) %&gt;% \n  as_tibble(rownames = \"smpID\") %&gt;% \n  mutate(diag = factor(diag, levels = diagOrd))\nsmpAnno &lt;- smpAnno[order(match(smpAnno$diag, diagOrd)), ]\nsmpAnno$ID &lt;- factor(smpAnno$ID, levels = smpAnno$ID)\n\npreData &lt;- assays(seDiann)$log2 %&gt;% as_tibble(rownames = \"protID\") %&gt;%\n  pivot_longer(-protID, names_to = \"smpID\", values_to = \"count\") %&gt;%\n  filter(!is.na(count)) %&gt;%\n  left_join(smpAnno)\n\nJoining with `by = join_by(smpID)`\n\ncusCols &lt;- c(\"#15A371\", \"green\", \"#A8F0BA\", \"blue\", \"#5083D1\", \"#8ECCF5\", \"cyan\", \n             \"#ED1379\", \"maroon1\", \"purple\", \"#AD9490\", \"brown\", \"red\", \"yellow\", \n             \"#E8CF15\", \"#F2D39B\", \"lightsalmon1\", \"antiquewhite\", \"black\")\nggplot(preData, aes(x = ID, y = count, fill = diag)) +\n  geom_bar(stat = \"identity\") +\n  theme(axis.text.x = element_blank(), legend.position = \"bottom\", legend.text = element_text(size = 7)) +\n  guides(fill = guide_legend(nrow = 7, byrow = TRUE)) + scale_fill_manual(values = cusCols)\n\n\n\n\n\npatTab &lt;- colData(seDiann) %&gt;% \n  as_tibble(rownames = \"smpID\") %&gt;%\n  mutate(diagSimple = ifelse(diag %in% c(\"CLL\", \"healthy\", \"MCL\", \"HCL\", \"SMZL\", \"MZL\"), diag, \"other\")) \n\n# diagSimple vs pelletSize\nggplot(patTab, aes(x = diagSimple, y = pelletSize, fill = diagSimple)) +\n  geom_violin(adjust = 1, trim = TRUE, scale = \"width\") + \n  geom_jitter() + theme_bw()\n\n\n\n#  diagSimple vs sampleTpe\ntable(patTab[, c(\"diagSimple\", \"sampleType\")])  %&gt;% as.data.frame() %&gt;%\n  ggpubr::ggballoonplot(fill = \"value\", size.range = c(0, 15)) +\n  scale_fill_viridis_c(option = \"C\")\n\n\n\n# pelletSize vs sampleTpe\nggplot(patTab, aes(x = sampleType, y = pelletSize, fill = sampleType)) +\n  geom_violin(adjust = 1, trim = TRUE, scale = \"width\") + \n  geom_jitter() +\n  theme_bw()\n\nWarning: Groups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped."
  },
  {
    "objectID": "Diann_QC.html#sample-plot",
    "href": "Diann_QC.html#sample-plot",
    "title": "Diann_QC",
    "section": "",
    "text": "load(\"output/seDiann.RData\")\ndiagOrd &lt;- colData(seDiann) %&gt;% \n  as_tibble(rownames = \"smpID\") %&gt;% \n  group_by(diag) %&gt;%\n  summarise(n = length(smpID)) %&gt;% \n  arrange(desc(n)) %&gt;%\n  pull(diag)\nsmpAnno &lt;- colData(seDiann) %&gt;% \n  as_tibble(rownames = \"smpID\") %&gt;% \n  mutate(diag = factor(diag, levels = diagOrd))\nsmpAnno &lt;- smpAnno[order(match(smpAnno$diag, diagOrd)), ]\nsmpAnno$ID &lt;- factor(smpAnno$ID, levels = smpAnno$ID)\n\npreData &lt;- assays(seDiann)$log2 %&gt;% as_tibble(rownames = \"protID\") %&gt;%\n  pivot_longer(-protID, names_to = \"smpID\", values_to = \"count\") %&gt;%\n  filter(!is.na(count)) %&gt;%\n  left_join(smpAnno)\n\nJoining with `by = join_by(smpID)`\n\ncusCols &lt;- c(\"#15A371\", \"green\", \"#A8F0BA\", \"blue\", \"#5083D1\", \"#8ECCF5\", \"cyan\", \n             \"#ED1379\", \"maroon1\", \"purple\", \"#AD9490\", \"brown\", \"red\", \"yellow\", \n             \"#E8CF15\", \"#F2D39B\", \"lightsalmon1\", \"antiquewhite\", \"black\")\nggplot(preData, aes(x = ID, y = count, fill = diag)) +\n  geom_bar(stat = \"identity\") +\n  theme(axis.text.x = element_blank(), legend.position = \"bottom\", legend.text = element_text(size = 7)) +\n  guides(fill = guide_legend(nrow = 7, byrow = TRUE)) + scale_fill_manual(values = cusCols)"
  },
  {
    "objectID": "Diann_QC.html#comparison-before-and-after-normalisation",
    "href": "Diann_QC.html#comparison-before-and-after-normalisation",
    "title": "Diann_QC",
    "section": "comparison before and after normalisation",
    "text": "comparison before and after normalisation\n\nDEP::meanSdPlot(seDiann)\n\n\n\nDEP::meanSdPlot(seSub)\n\n\n\n\n\n# log2 plot\npreData %&gt;%\n  ggplot(aes(x = ID, y = count, fill = diag)) +\n  geom_boxplot(outlier.shape = NA) +\n  theme(axis.text.y = element_blank(), legend.position = \"bottom\", plot.title = element_text(hjust = 0.5)) + \n  scale_fill_manual(values = cusCols) +\n  coord_flip() +\n  ggtitle(\"Distribuiton per sample (log2 transformation without normalisation)\")\n\n\n\n# Plot after filtering and vsn\npostData &lt;- assay(seSub) %&gt;% as_tibble(rownames = \"protID\") %&gt;%\n  pivot_longer(-protID, names_to = \"smpID\", values_to = \"count\") %&gt;%\n  filter(!is.na(count)) %&gt;%\n  left_join(smpAnno)\n\nJoining with `by = join_by(smpID)`\n\npostData %&gt;% \n  ggplot(aes(x = ID, y = count, fill = diag)) +\n  geom_boxplot(outlier.shape = NA) +\n  theme(axis.text.y = element_blank(), legend.position = \"bottom\", plot.title = element_text(hjust = 0.5)) + \n  scale_fill_manual(values = cusCols) +\n  coord_flip() +\n  ggtitle(\"Distribuiton per sample (vsn)\")"
  },
  {
    "objectID": "Diann_QC.html#missing-rate",
    "href": "Diann_QC.html#missing-rate",
    "title": "Diann_QC",
    "section": "missing rate",
    "text": "missing rate\n\nmissTab &lt;- assay(seDiann) %&gt;% as.data.frame() %&gt;%\n  mutate(sampleNr = rowSums(!is.na(.)), \n         missRate = rowSums(is.na(.))/ncol(.))\n\nmissPropTab &lt;- missTab  %&gt;%\n  group_by(missRate, sampleNr) %&gt;%\n  summarise(protNr = length(missRate), \n            proportion = protNr/nrow(.)) %&gt;% ungroup()\n\nplot_frequency(seDiann) + \n  theme(axis.text.x = element_text(angle = 45, size = 7)) + \n  scale_x_discrete(breaks = seq(-0, 399, 10))\n\n\n\n  # + expand_limits(x = c(-2, ncol(wideData) + 2), y = 0)\n\nmissPropTab %&gt;% ggplot(aes(x = missRate, y = proportion)) + geom_line(linewidth = 0.7, color = \"green\") +\n  theme(axis.title.y.right = element_text(color = \"green\"))+ \n  labs(x = \"Missing rate (%)\") +\n  theme_bw() +\n  theme(plot.title = element_text(hjust = 0.5)) +\n  labs(title = \"Protein missing rate\")"
  },
  {
    "objectID": "Diann_QC.html#upset-plot",
    "href": "Diann_QC.html#upset-plot",
    "title": "Diann_QC",
    "section": "upset plot",
    "text": "upset plot\n\npresTab &lt;- assay(seDiann) %&gt;% as_tibble(rownames = \"protID\") %&gt;%\n  pivot_longer(-protID, names_to = \"smpID\", values_to = \"count\") %&gt;%\n  left_join(patTab, by = c(\"smpID\" = \"smpID\")) %&gt;%\n  group_by(diagSimple, protID) %&gt;%\n  summarise(presence = ifelse(sum(is.na(count)) == 0 , 1, 0)) %&gt;%\n  ungroup() %&gt;%\n  pivot_wider(names_from = diagSimple, values_from = presence) %&gt;%\n  column_to_rownames(\"protID\")\n\n`summarise()` has grouped output by 'diagSimple'. You can override using the\n`.groups` argument.\n\nsetVars &lt;- c(\"CLL\", \"healthy\", \"MCL\", \"HCL\", \"SMZL\", \"MZL\", \"other\")\nupset(presTab,\n      sets = setVars,\n      order.by = \"freq\",\n        main.bar.color = \"violetred4\",\n        sets.bar.color = \"turquoise4\",\n        matrix.color = \"slateblue4\",\n        shade.color = \"wheat4\")"
  },
  {
    "objectID": "Diann_QC.html#mean-vs-missing",
    "href": "Diann_QC.html#mean-vs-missing",
    "title": "Diann_QC",
    "section": "mean vs missing",
    "text": "mean vs missing\n\nplot_detect(seSub)"
  },
  {
    "objectID": "Diann_QC.html#imputation",
    "href": "Diann_QC.html#imputation",
    "title": "Diann_QC",
    "section": "imputation",
    "text": "imputation\n\nassayNames(seSub) &lt;- \"vsn\"\nassays(seSub)$qrilc &lt;- DEP::impute(seSub, \"QRILC\") %&gt;% assay()\nassays(seSub)$minProb &lt;- DEP::impute(seSub, \"MinProb\", q = 0.07) %&gt;% assay()\n\n[1] 0.441956\n\nassays(seSub)$knn &lt;- DEP::impute(seSub, \"knn\", rowmax = max(rowSums(is.na(assay(seSub))))) %&gt;% assay()\n\nCluster size 6938 broken into 4551 2387 \nCluster size 4551 broken into 2888 1663 \nCluster size 2888 broken into 1 2887 \nDone cluster 1 \nCluster size 2887 broken into 1699 1188 \nCluster size 1699 broken into 1129 570 \nDone cluster 1129 \nDone cluster 570 \nDone cluster 1699 \nDone cluster 1188 \nDone cluster 2887 \nDone cluster 2888 \nCluster size 1663 broken into 501 1162 \nDone cluster 501 \nDone cluster 1162 \nDone cluster 1663 \nDone cluster 4551 \nCluster size 2387 broken into 1462 925 \nDone cluster 1462 \nDone cluster 925 \nDone cluster 2387 \n\n# save(seSub, file = \"output/seDiann_sub.RData\")\n\nallImp &lt;- lapply(c(\"qrilc\", \"minProb\", \"knn\"), function(imp){\n  assays(seSub)[[imp]] %&gt;%\n    tibble(Mean = rowMeans(., ), \n           `Proportion of Missing` = rowSums(is.na(assay(seSub)))/ncol(.)) %&gt;%\n    mutate(Imputation = imp)\n}) %&gt;% do.call(rbind, .)\n\nplot1 &lt;- assays(seSub)$vsn %&gt;% t() %&gt;%\n  plot_meanMiss(bins = 100, color = \"cyan\") + scale_fill_viridis_c(option = \"C\")\n\nplot1 + geom_smooth(allImp, mapping = aes(y = `Proportion of Missing`, x = Mean, col = Imputation), \n                    method = 'loess', se = FALSE) + facet_wrap(~Imputation, ncol = 2) + theme_bw()"
  },
  {
    "objectID": "preprocessing.html",
    "href": "preprocessing.html",
    "title": "Preprocessing",
    "section": "",
    "text": "Metadata Investigation\n\n# sample annotation\nsmpDF &lt;- readxl::read_excel (\"data/Proteomics_o30666_samplePreparation_V3_SP.xlsx\") %&gt;%\n  mutate(smpID = paste0(\"S\", `Sample ID bfabric`),\n         patID = PatientID,\n         diag = Diagnosis,\n         set = Project,\n         pelletSize = `Pellet size \\r\\n[1E+06 cells]`,\n         sampleProcessGroup = `Group for sample processing and injections`,\n         BTKiTimePoint = `BTKi time point`,\n         sampleType = Stype,\n         processDate = `Processing date`,\n         sampleID = SampleID) %&gt;%\n  select(all_of(c(\"smpID\", \"sampleID\", \"patID\", \"diag\", \"set\", \"BTKiTimePoint\", \"sampleType\", \"processDate\", \"pelletSize\", \"sampleProcessGroup\")))\nknitr::kable(head(smpDF))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsmpID\nsampleID\npatID\ndiag\nset\nBTKiTimePoint\nsampleType\nprocessDate\npelletSize\nsampleProcessGroup\n\n\n\n\nS454476\n12PB0339\nP0453\nMZL\nLymphoma/HCL\nNA\nPB\n2022-02-15\n0.5\nNA\n\n\nS454477\nSID3079\nPID1418\nMCL\nLymphoma/HCL, BTKi\nalternative untreated\nPB\n2022-02-15\n0.5\nsame patient\n\n\nS454478\n15PB0310\nP1043\nMCL\nLymphoma/HCL\nNA\nPB\n2022-02-15\n0.5\nNA\n\n\nS454479\n16PB0006\nP1063\nMCL\nLymphoma/HCL\nNA\nPB\n2022-02-15\n0.5\nNA\n\n\nS454480\n14PB0373\nP0892\nMZL\nLymphoma/HCL\nNA\nPB\n2022-02-15\n0.5\nNA\n\n\nS454481\n13PB0574\nP0710\nMCL\nLymphoma/HCL, BTKi\nfirst, peak\nPB\n2022-02-15\n0.5\nNA\n\n\n\n\n# change the names\nsmpDF$diag &lt;- stringi::stri_replace_all_regex(smpDF$diag, \n                       pattern = c(\" \\\\+ \", \", \", \" \\\\(\", \"\\\\) \", \"\\\\)\", \"\\\\?\", \"/\"),\n                       replacement = c(rep(\"_\", 3), rep(\"\", 3), \"_or_\"),\n                       vectorize = FALSE) %&gt;%\n  str_replace(\"\\\\+\", \"_\") %&gt;%\n  str_replace_all(\" \", \"_\")\nsmpDF[grep(\"healty\", smpDF$diag), ]$diag &lt;- \"healthy\"\n\n# make unique ID\nsmpDF &lt;- unite(smpDF, ID, c(diag, smpID), remove = FALSE) %&gt;% \n  make_unique(\"patID\", \"ID\") %&gt;%\n  column_to_rownames(\"smpID\")\n\n# investigate diagnosis and patients\ndiagTab &lt;- smpDF %&gt;% group_by(diag) %&gt;%\n  summarise(Count = length(diag)) %&gt;% arrange(desc(Count))\ndiagTab$condition &lt;- factor(diagTab$diag, levels = diagTab$diag)\nggplot(diagTab, aes(x = condition, y = Count, fill = condition)) +\n  geom_bar(stat = \"identity\") +\n  geom_text(aes(label = Count), position = position_dodge(width = 0.9), vjust = -0.25) +\n  theme_bw() +\n  theme(legend.position = \"bottom\", \n        axis.text.x = element_text(angle = 45, hjust = 1),\n        axis.text = element_text(size = 18),\n        axis.title = element_text(size = 20),\n        axis.title.x = element_blank()) \n\n\n\nsetTab &lt;- smpDF %&gt;% group_by(set) %&gt;%\n  summarise(Count = length(set)) %&gt;% arrange(desc(Count))\nsetTab$Project &lt;- factor(setTab$set, levels = setTab$set)\nggplot(setTab, aes(x = Project, y = Count, fill = Project)) +\n  geom_bar(stat = \"identity\") +\n  geom_text(aes(label = Count), position = position_dodge(width = 0.9), vjust = -0.25) +\n  theme_bw() +\n  theme(legend.position = \"none\", \n        axis.text.x = element_text(angle = 45, hjust = 1),\n        axis.text = element_text(size = 18),\n        axis.title = element_text(size = 20)) \n\n\n\n# 2. protein annotation\ndiannData &lt;- read_tsv(\"data/DIANN_03052023/2286262/WU288349/out-2023-04-26/diann-output.pg_matrix.tsv\", show_col_types = FALSE)\ngeneDF &lt;- diannData %&gt;%\n  dplyr::rename(protID = Protein.Group, geneID = Genes) %&gt;%\n  select(protID, geneID)\n\n# filter control proteins\nprotAnno &lt;- geneDF %&gt;% filter(!str_detect(protID, \"Y-FGCZCont\"))\nctrlProts &lt;- setdiff(geneDF$protID, protAnno$protID)\n\n\n\nCount data investigation\n\ndiannL &lt;- diannData %&gt;% \n  select(Protein.Group, contains(\"scratch\")) %&gt;%\n  pivot_longer(-Protein.Group) %&gt;%\n  separate(name, letters[1:10], \"_\") %&gt;%\n  mutate(smpID = e) %&gt;%\n  dplyr::rename(protID = Protein.Group, count = value) %&gt;%\n  select(smpID, protID, count)\n\nWarning: Expected 10 pieces. Missing pieces filled with `NA` in 3765363 rows [1, 2, 3,\n4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...].\n\ntail(diannL) %&gt;% knitr::kable()\n\n\n\n\nsmpID\nprotID\ncount\n\n\n\n\nS454608\nY-FGCZCont00493\nNA\n\n\nS454778\nY-FGCZCont00493\nNA\n\n\nS454782\nY-FGCZCont00493\nNA\n\n\nS454792\nY-FGCZCont00493\nNA\n\n\nS454542\nY-FGCZCont00493\nNA\n\n\nS454868\nY-FGCZCont00493\n3458.21\n\n\n\n\nspecL &lt;- read_tsv(\"data/20230605_084251_20230223_p3254_o30666_hybridLibrary_merged/20230605_084359_ProteinQuant_AD (Normal).tsv\", show_col_types = FALSE) %&gt;%\n  separate(R.FileName, letters[1:10], \"_\") %&gt;%\n  mutate(smpID = d) %&gt;%\n  dplyr::rename(protID = PG.ProteinAccessions, count = PG.Quantity) %&gt;%\n  select(smpID, protID, count) %&gt;%\n  mutate(count = ifelse(is.nan(count), NA, count))\n\nWarning: Expected 10 pieces. Missing pieces filled with `NA` in 2439726 rows [1, 2, 3,\n4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...].\n\ntail(specL) %&gt;% knitr::kable()\n\n\n\n\nsmpID\nprotID\ncount\n\n\n\n\nS454542\nY-FGCZCont00456\n23.11214\n\n\nS454542\nY-FGCZCont00459;Y-FGCZCont00463\nNA\n\n\nS454542\nY-FGCZCont00464\n192.07571\n\n\nS454542\nY-FGCZCont00474\n162.67084\n\n\nS454542\nY-FGCZCont00477\n103.24450\n\n\nS454542\nY-FGCZCont00493\n351.87003\n\n\n\n\n\n\n\nOutlier detection\n\n# sample outliers\nprotTabAll &lt;- bind_rows(diannL %&gt;% mutate(software = \"diann\"), specL %&gt;% mutate(software = \"spectronaut\"))\nsmpIden &lt;- protTabAll %&gt;% \n  group_by(software, smpID) %&gt;%\n  summarise(\"Protein count\" = sum(!is.na(count))) %&gt;%\n  arrange(`Protein count`) %&gt;%\n  ungroup()\n\n`summarise()` has grouped output by 'software'. You can override using the\n`.groups` argument.\n\nsmpOut &lt;- protTabAll %&gt;% \n  group_by(software) %&gt;% \n  summarise(\"total proteins\" = length(unique(protID))) %&gt;%\n  left_join(smpIden, by = c(\"software\" = \"software\")) %&gt;%\n  ungroup()\n\nrbind(smpOut[smpOut$software == \"diann\", ][1:5, ], smpOut[smpOut$software == \"spectronaut\", ][1:5, ]) %&gt;% knitr::kable(caption = \"Protein count per sample (top5 samples per software)\")\n\n\nProtein count per sample (top5 samples per software)\n\n\nsoftware\ntotal proteins\nsmpID\nProtein count\n\n\n\n\ndiann\n9437\nS454851\n2438\n\n\ndiann\n9437\nS454783\n3078\n\n\ndiann\n9437\nS454863\n3447\n\n\ndiann\n9437\nS454850\n3514\n\n\ndiann\n9437\nS454841\n3914\n\n\nspectronaut\n8085\nS454710\n12\n\n\nspectronaut\n8085\nS454872\n2258\n\n\nspectronaut\n8085\nS454851\n2552\n\n\nspectronaut\n8085\nS454783\n2868\n\n\nspectronaut\n8085\nS454863\n3322\n\n\n\n\n# protein outliers\nprotOut &lt;- protTabAll %&gt;% \n  group_by(software, protID) %&gt;% \n  summarise(\"Sample count\" = sum(!is.na(count))) %&gt;%\n  arrange(`Sample count`) %&gt;%\n  ungroup(protID)\n\n`summarise()` has grouped output by 'software'. You can override using the\n`.groups` argument.\n\nrbind(protOut[protOut$software == \"diann\", ][1:5, ], protOut[protOut$software == \"spectronaut\", ][1:5, ]) %&gt;% knitr::kable(caption = \"Sample count per protein (top5 proteins per software)\")\n\n\nSample count per protein (top5 proteins per software)\n\n\nsoftware\nprotID\nSample count\n\n\n\n\ndiann\nA0A0C4DH26\n1\n\n\ndiann\nA0A0C4DH33\n1\n\n\ndiann\nO00204\n1\n\n\ndiann\nO14798\n1\n\n\ndiann\nO94911\n1\n\n\nspectronaut\nA0A075B6P5;P01615\n0\n\n\nspectronaut\nA0A075B6S2;A2NJV5\n0\n\n\nspectronaut\nA0A0A0MT36\n0\n\n\nspectronaut\nA0A0B4J2D5;P0DPI2\n0\n\n\nspectronaut\nA0A0B4J2D9;P0DP09\n0\n\n\n\n\nsummarise(protOut, \"Complete missing proteins\" = sum(`Sample count` == 0)) %&gt;% knitr::kable()\n\n\n\n\nsoftware\nComplete missing proteins\n\n\n\n\ndiann\n0\n\n\nspectronaut\n164\n\n\n\n\n\n\n\nDIANN SE\n\nassay.diann &lt;- pivot_wider(diannL, names_from = smpID, values_from = count) %&gt;%\n  filter(!(protID %in% ctrlProts | str_detect(protID, \"Y-FGCZCont\"))) %&gt;% \n  arrange(protID) %&gt;%\n  column_to_rownames(\"protID\") %&gt;% \n  select(rownames(smpDF)) %&gt;%\n  as.matrix()\nprotAnno.diann &lt;- left_join(as_tibble(assay.diann, rownames = \"protID\"), protAnno) %&gt;% \n  select(colnames(protAnno)) %&gt;%\n  make_unique(\"geneID\", \"protID\", delim = \";\")\n\nJoining with `by = join_by(protID)`\n\nrownames(assay.diann) &lt;- protAnno.diann$name\nrownames(protAnno.diann) &lt;- protAnno.diann$name\nseDiann &lt;- SummarizedExperiment(assays = assay.diann, \n                                colData = smpDF, \n                                rowData = protAnno.diann)\nassayNames(seDiann) &lt;- \"count\"\nassays(seDiann)$log2 &lt;- log2(assay.diann)\nsave(seDiann, file = \"output/seDiann.RData\")\n\n\n\nSpectronaut SE after filtering\n\nrmProts.spec &lt;- union(ctrlProts, \n                      protOut[protOut$`Sample count` == 0 & protOut$software == \"spectronaut\", ]$protID)\nassay.spec &lt;- pivot_wider(specL, names_from = smpID, values_from = count) %&gt;%\n  filter(!(protID %in% rmProts.spec | str_detect(protID, \"Y-FGCZCont\"))) %&gt;% \n  arrange(protID) %&gt;%\n  column_to_rownames(\"protID\") %&gt;% \n  select(rownames(smpDF)) %&gt;%\n  as.matrix()\nprotAnno.spec &lt;- left_join(as_tibble(assay.spec, rownames = \"protID\"), protAnno) %&gt;% \n  select(colnames(protAnno)) %&gt;%\n  make_unique(\"geneID\", \"protID\", delim = \";\")\n\nJoining with `by = join_by(protID)`\n\nrownames(assay.spec) &lt;- protAnno.spec$name\nrownames(protAnno.spec) &lt;- protAnno.spec$name\nseSpec &lt;- SummarizedExperiment(assays = assay.spec, \n                               colData = smpDF, \n                               rowData = protAnno.spec)\nassayNames(seSpec) &lt;- \"count\"\nassays(seSpec)$log2 &lt;- log2(assay.spec)\nsave(seSpec, file = \"output/seSpec.RData\")"
  },
  {
    "objectID": "Spec_QC.html",
    "href": "Spec_QC.html",
    "title": "Spectronaut Quality Control",
    "section": "",
    "text": "load(\"output/seSpec.RData\")\ndiagOrd &lt;- colData(seSpec) %&gt;% \n  as_tibble(rownames = \"smpID\") %&gt;% \n  group_by(diag) %&gt;%\n  summarise(n = length(smpID)) %&gt;% \n  arrange(desc(n)) %&gt;%\n  pull(diag)\nsmpAnno &lt;- colData(seSpec) %&gt;% \n  as_tibble(rownames = \"smpID\") %&gt;% \n  mutate(diag = factor(diag, levels = diagOrd))\nsmpAnno &lt;- smpAnno[order(match(smpAnno$diag, diagOrd)), ]\nsmpAnno$ID &lt;- factor(smpAnno$ID, levels = smpAnno$ID)\n\npreData &lt;- assays(seSpec)$log2 %&gt;% as_tibble(rownames = \"protID\") %&gt;%\n  pivot_longer(-protID, names_to = \"smpID\", values_to = \"count\") %&gt;%\n  filter(!is.na(count)) %&gt;%\n  left_join(smpAnno)\n\nJoining with `by = join_by(smpID)`\n\ncusCols &lt;- c(\"#15A371\", \"green\", \"#A8F0BA\", \"blue\", \"#5083D1\", \"#8ECCF5\", \"cyan\", \n             \"#ED1379\", \"maroon1\", \"purple\", \"#AD9490\", \"brown\", \"red\", \"yellow\", \n             \"#E8CF15\", \"#F2D39B\", \"lightsalmon1\", \"antiquewhite\", \"black\")\nggplot(preData, aes(x = ID, y = count, fill = diag)) +\n  geom_bar(stat = \"identity\") +\n  theme(axis.text.x = element_blank(), legend.position = \"bottom\", legend.text = element_text(size = 7)) +\n  guides(fill = guide_legend(nrow = 7, byrow = TRUE)) + scale_fill_manual(values = cusCols)\n\n\n\n\n\npatTab &lt;- colData(seSpec) %&gt;% \n  as_tibble(rownames = \"smpID\") %&gt;%\n  mutate(diagSimple = ifelse(diag %in% c(\"CLL\", \"healthy\", \"MCL\", \"HCL\", \"SMZL\", \"MZL\"), diag, \"other\")) \n\n# diagSimple vs pelletSize\nggplot(patTab, aes(x = diagSimple, y = pelletSize, fill = diagSimple)) +\n  geom_violin(adjust = 1, trim = TRUE, scale = \"width\") + \n  geom_jitter() + theme_bw() +\n  ggrepel::geom_text_repel(\n    data = patTab[patTab$smpID == \"S454710\", ],\n    aes(label = smpID), \n    box.padding = 2, \n    size = 3.5)\n\n\n\n#  diagSimple vs sampleTpe\ntable(patTab[, c(\"diagSimple\", \"sampleType\")])  %&gt;% as.data.frame() %&gt;%\n  ggpubr::ggballoonplot(fill = \"value\", size.range = c(0, 15)) +\n  scale_fill_viridis_c(option = \"C\") +\n  ggrepel::geom_text_repel(\n    data = patTab[patTab$smpID == \"S454710\", ],\n    aes(label = smpID), \n    box.padding = 2, \n    size = 3.5)\n\n\n\n# pelletSize vs sampleTpe\nggplot(patTab, aes(x = sampleType, y = pelletSize, fill = sampleType)) +\n  geom_violin(adjust = 1, trim = TRUE, scale = \"width\") + \n  geom_jitter() +\n  theme_bw() +\n  ggrepel::geom_text_repel(\n    data = patTab[patTab$smpID == \"S454710\", ],\n    aes(label = smpID), \n    box.padding = 2, \n    size = 3.5)\n\nWarning: Groups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped."
  },
  {
    "objectID": "Spec_QC.html#sample-plot",
    "href": "Spec_QC.html#sample-plot",
    "title": "Spectronaut Quality Control",
    "section": "",
    "text": "load(\"output/seSpec.RData\")\ndiagOrd &lt;- colData(seSpec) %&gt;% \n  as_tibble(rownames = \"smpID\") %&gt;% \n  group_by(diag) %&gt;%\n  summarise(n = length(smpID)) %&gt;% \n  arrange(desc(n)) %&gt;%\n  pull(diag)\nsmpAnno &lt;- colData(seSpec) %&gt;% \n  as_tibble(rownames = \"smpID\") %&gt;% \n  mutate(diag = factor(diag, levels = diagOrd))\nsmpAnno &lt;- smpAnno[order(match(smpAnno$diag, diagOrd)), ]\nsmpAnno$ID &lt;- factor(smpAnno$ID, levels = smpAnno$ID)\n\npreData &lt;- assays(seSpec)$log2 %&gt;% as_tibble(rownames = \"protID\") %&gt;%\n  pivot_longer(-protID, names_to = \"smpID\", values_to = \"count\") %&gt;%\n  filter(!is.na(count)) %&gt;%\n  left_join(smpAnno)\n\nJoining with `by = join_by(smpID)`\n\ncusCols &lt;- c(\"#15A371\", \"green\", \"#A8F0BA\", \"blue\", \"#5083D1\", \"#8ECCF5\", \"cyan\", \n             \"#ED1379\", \"maroon1\", \"purple\", \"#AD9490\", \"brown\", \"red\", \"yellow\", \n             \"#E8CF15\", \"#F2D39B\", \"lightsalmon1\", \"antiquewhite\", \"black\")\nggplot(preData, aes(x = ID, y = count, fill = diag)) +\n  geom_bar(stat = \"identity\") +\n  theme(axis.text.x = element_blank(), legend.position = \"bottom\", legend.text = element_text(size = 7)) +\n  guides(fill = guide_legend(nrow = 7, byrow = TRUE)) + scale_fill_manual(values = cusCols)\n\n\n\n\n\npatTab &lt;- colData(seSpec) %&gt;% \n  as_tibble(rownames = \"smpID\") %&gt;%\n  mutate(diagSimple = ifelse(diag %in% c(\"CLL\", \"healthy\", \"MCL\", \"HCL\", \"SMZL\", \"MZL\"), diag, \"other\")) \n\n# diagSimple vs pelletSize\nggplot(patTab, aes(x = diagSimple, y = pelletSize, fill = diagSimple)) +\n  geom_violin(adjust = 1, trim = TRUE, scale = \"width\") + \n  geom_jitter() + theme_bw() +\n  ggrepel::geom_text_repel(\n    data = patTab[patTab$smpID == \"S454710\", ],\n    aes(label = smpID), \n    box.padding = 2, \n    size = 3.5)\n\n\n\n#  diagSimple vs sampleTpe\ntable(patTab[, c(\"diagSimple\", \"sampleType\")])  %&gt;% as.data.frame() %&gt;%\n  ggpubr::ggballoonplot(fill = \"value\", size.range = c(0, 15)) +\n  scale_fill_viridis_c(option = \"C\") +\n  ggrepel::geom_text_repel(\n    data = patTab[patTab$smpID == \"S454710\", ],\n    aes(label = smpID), \n    box.padding = 2, \n    size = 3.5)\n\n\n\n# pelletSize vs sampleTpe\nggplot(patTab, aes(x = sampleType, y = pelletSize, fill = sampleType)) +\n  geom_violin(adjust = 1, trim = TRUE, scale = \"width\") + \n  geom_jitter() +\n  theme_bw() +\n  ggrepel::geom_text_repel(\n    data = patTab[patTab$smpID == \"S454710\", ],\n    aes(label = smpID), \n    box.padding = 2, \n    size = 3.5)\n\nWarning: Groups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped."
  },
  {
    "objectID": "Spec_QC.html#comparison-before-and-after-normalization",
    "href": "Spec_QC.html#comparison-before-and-after-normalization",
    "title": "Spectronaut Quality Control",
    "section": "comparison before and after normalization",
    "text": "comparison before and after normalization\n\nDEP::meanSdPlot(seSpec)\n\n\n\nDEP::meanSdPlot(seSub)\n\n\n\n\n\n# log2 plot\npreData %&gt;%\n  ggplot(aes(x = ID, y = count, fill = diag)) +\n  geom_boxplot(outlier.shape = NA) +\n  theme(axis.text.y = element_blank(), legend.position = \"bottom\", plot.title = element_text(hjust = 0.5)) + \n  scale_fill_manual(values = cusCols) +\n  coord_flip() +\n  ggtitle(\"Distribuiton per sample (log2 transformation without normalisation)\")\n\n\n\n# Plot after filtering and vsn\npostData &lt;- assay(seSub) %&gt;% as_tibble(rownames = \"protID\") %&gt;%\n  pivot_longer(-protID, names_to = \"smpID\", values_to = \"count\") %&gt;%\n  filter(!is.na(count)) %&gt;%\n  left_join(smpAnno)\n\nJoining with `by = join_by(smpID)`\n\npostData %&gt;% \n  ggplot(aes(x = ID, y = count, fill = diag)) +\n  geom_boxplot(outlier.shape = NA) +\n  theme(axis.text.y = element_blank(), legend.position = \"bottom\", plot.title = element_text(hjust = 0.5)) + \n  scale_fill_manual(values = cusCols) +\n  coord_flip() +\n  ggtitle(\"Distribuiton per sample (vsn)\")"
  },
  {
    "objectID": "Spec_QC.html#missing-rate",
    "href": "Spec_QC.html#missing-rate",
    "title": "Spectronaut Quality Control",
    "section": "missing rate",
    "text": "missing rate\n\nmissTab &lt;- assay(seSpec) %&gt;% as.data.frame() %&gt;%\n  mutate(sampleNr = rowSums(!is.na(.)), \n         missRate = rowSums(is.na(.))/ncol(.))\n\nmissPropTab &lt;- missTab  %&gt;%\n  group_by(missRate, sampleNr) %&gt;%\n  summarise(protNr = length(missRate), \n            proportion = protNr/nrow(.)) %&gt;% ungroup()\n\nplot_frequency(seSpec) + \n  theme(axis.text.x = element_text(angle = 45, size = 7)) + \n  scale_x_discrete(breaks = seq(-0, 399, 10))\n\n\n\n  # + expand_limits(x = c(-2, ncol(wideData) + 2), y = 0)\n\nmissPropTab %&gt;% ggplot(aes(x = missRate, y = proportion)) + geom_line(linewidth = 0.7, color = \"green\") +\n  theme(axis.title.y.right = element_text(color = \"green\"))+ \n  labs(x = \"Missing rate (%)\") +\n  theme_bw() +\n  theme(plot.title = element_text(hjust = 0.5)) +\n  labs(title = \"Protein missing rate\")"
  },
  {
    "objectID": "Spec_QC.html#upset-plot",
    "href": "Spec_QC.html#upset-plot",
    "title": "Spectronaut Quality Control",
    "section": "upset plot",
    "text": "upset plot\n\npatTab &lt;- colData(seSpec) %&gt;% as_tibble(rownames = \"smpID\") %&gt;%\n    mutate(diagSimple = ifelse(diag %in% c(\"CLL\", \"healthy\", \"MCL\", \"HCL\", \"SMZL\", \"MZL\"), diag, \"other\")) \npresTab &lt;- assay(seSpec) %&gt;% as_tibble(rownames = \"protID\") %&gt;%\n  pivot_longer(-protID, names_to = \"smpID\", values_to = \"count\") %&gt;%\n  left_join(patTab, by = c(\"smpID\" = \"smpID\")) %&gt;%\n  group_by(diagSimple, protID) %&gt;%\n  summarise(presence = ifelse(sum(is.na(count)) == 0 , 1, 0)) %&gt;%\n  ungroup() %&gt;%\n  pivot_wider(names_from = diagSimple, values_from = presence) %&gt;%\n  column_to_rownames(\"protID\")\n\n`summarise()` has grouped output by 'diagSimple'. You can override using the\n`.groups` argument.\n\nsetVars &lt;- c(\"CLL\", \"healthy\", \"MCL\", \"HCL\", \"SMZL\", \"MZL\", \"other\")\nupset(presTab,\n      sets = setVars,\n      order.by = \"freq\",\n        main.bar.color = \"violetred4\",\n        sets.bar.color = \"turquoise4\",\n        matrix.color = \"slateblue4\",\n        shade.color = \"wheat4\")"
  },
  {
    "objectID": "Spec_QC.html#mean-vs-missing",
    "href": "Spec_QC.html#mean-vs-missing",
    "title": "Spectronaut Quality Control",
    "section": "mean vs missing",
    "text": "mean vs missing\n\nplot_detect(seSub)"
  },
  {
    "objectID": "Spec_QC.html#imputation",
    "href": "Spec_QC.html#imputation",
    "title": "Spectronaut Quality Control",
    "section": "Imputation",
    "text": "Imputation\n\nassayNames(seSub) &lt;- \"vsn\"\nassays(seSub)$qrilc &lt;- DEP::impute(seSub, \"QRILC\") %&gt;% assay()\nassays(seSub)$minProb &lt;- DEP::impute(seSub, \"MinProb\", q = 0.07) %&gt;% assay()\n\n[1] 0.6433399\n\nassays(seSub)$knn &lt;- DEP::impute(seSub, \"knn\", rowmax = max(rowSums(is.na(assay(seSub))))) %&gt;% assay()\n\nCluster size 6107 broken into 2844 3263 \nCluster size 2844 broken into 832 2012 \nDone cluster 832 \nCluster size 2012 broken into 891 1121 \nDone cluster 891 \nDone cluster 1121 \nDone cluster 2012 \nDone cluster 2844 \nCluster size 3263 broken into 1295 1968 \nDone cluster 1295 \nCluster size 1968 broken into 226 1742 \nDone cluster 226 \nCluster size 1742 broken into 1632 110 \nCluster size 1632 broken into 1120 512 \nDone cluster 1120 \nDone cluster 512 \nDone cluster 1632 \nDone cluster 110 \nDone cluster 1742 \nDone cluster 1968 \nDone cluster 3263 \n\n# save(seSub, file = \"output/seSpec_sub.RData\")\n\nallImp &lt;- lapply(c(\"qrilc\", \"minProb\", \"knn\"), function(imp){\n  assays(seSub)[[imp]] %&gt;%\n    tibble(Mean = rowMeans(., ), \n           `Proportion of Missing` = rowSums(is.na(assay(seSub)))/ncol(.)) %&gt;%\n    mutate(Imputation = imp)\n}) %&gt;% do.call(rbind, .)\n\nplot1 &lt;- assays(seSub)$vsn %&gt;% t() %&gt;%\n  plot_meanMiss(bins = 100, color = \"cyan\") + scale_fill_viridis_c(option = \"C\")\nplot1 + geom_smooth(allImp, mapping = aes(y = `Proportion of Missing`, x = Mean, col = Imputation), method = 'loess', se = FALSE) + facet_wrap(~Imputation, ncol = 2) + theme_bw()"
  },
  {
    "objectID": "QA.html",
    "href": "QA.html",
    "title": "QA and Comparison",
    "section": "",
    "text": "load(\"output/seDiann.RData\")\nsmpAnno &lt;- colData(seDiann) %&gt;% as_tibble(rownames = \"smpID\") \nnumDetect.diann &lt;- tibble(smpID = colnames(seDiann),\n                          DIANN = colSums(!is.na(assay(seDiann))))\n\ndiagOrd &lt;- colData(seDiann) %&gt;% as_tibble(rownames = \"smpID\") %&gt;% group_by(diag) %&gt;%\n  summarise(n = length(smpID)) %&gt;% arrange(desc(n)) %&gt;%\n  pull(diag)\n\nload(\"output/seSpec.RData\")\n\nnumDetect.spec &lt;- tibble(smpID = colnames(seSpec),\n                         Spectronaut = colSums(!is.na(assay(seSpec))))\n\nplotCom &lt;- left_join(numDetect.diann, numDetect.spec) %&gt;% left_join(smpAnno)  %&gt;%\n  mutate(condition = factor(diag, levels = diagOrd))\n\nJoining with `by = join_by(smpID)`\nJoining with `by = join_by(smpID)`\n\nggplot(plotCom, aes(x = Spectronaut, y = DIANN)) +\n  geom_point(aes(col = condition), size=5) +\n  theme_bw() +\n  xlab(\"Number of proteins by Spectronaut\") +\n  ylab(\"Number of proteins by DIANN\") +\n  geom_abline(slope = 1, intercept = 0, color = \"red\") +\n  xlim(0, 8000) + ylim(0, 8000) +\n  theme(legend.position = \"bottom\",\n        axis.text = element_text(size = 18),\n        axis.title = element_text(size = 20))\n\n\n\n# ggsave(\"protNumCompare.pdf\", height = 10, width = 9)\n\nggplot(plotCom, aes(x = Spectronaut, y = DIANN)) +\n  geom_point(aes(col = pelletSize), size=5) +\n  theme_bw() +\n  xlab(\"Number of proteins by Spectronaut\") +\n  ylab(\"Number of proteins by DIANN\") +\n  geom_abline(slope = 1, intercept = 0, color = \"red\") +\n  xlim(0,8000) + ylim(0,8000) +\n  theme(legend.position = \"bottom\",\n        axis.text = element_text(size=18),\n        axis.title = element_text(size=20))\n\n\n\n# ggsave(\"protNumCompare_pellet.pdf\", height = 10, width = 9)"
  },
  {
    "objectID": "QA.html#before-normalization-already-log2-inside-se-object",
    "href": "QA.html#before-normalization-already-log2-inside-se-object",
    "title": "QA and Comparison",
    "section": "Before normalization, already log2 inside SE object",
    "text": "Before normalization, already log2 inside SE object\n\nmedTab.diann &lt;- tibble(smpID = colnames(seDiann),\n                       DIANN = colMedians(assays(seDiann)$log2, na.rm = TRUE))\n\nmedTab.spec &lt;- tibble(smpID = colnames(seSpec),\n                      Spectronaut = colMedians(assays(seSpec)$log2, na.rm = TRUE))\n\ncomTab &lt;- left_join(medTab.diann, medTab.spec) %&gt;% left_join(smpAnno) %&gt;% \n  pivot_longer(c(DIANN, Spectronaut), names_to = \"software\", values_to = \"medVal\") %&gt;%\n  mutate(condition = factor(diag, levels = diagOrd))\n\nJoining with `by = join_by(smpID)`\nJoining with `by = join_by(smpID)`\n\n\nPoint plot\n\nmedComTab &lt;- left_join(medTab.diann, medTab.spec) %&gt;% left_join(smpAnno) %&gt;%\n  mutate(condition = factor(diag, levels = diagOrd))\n\nJoining with `by = join_by(smpID)`\nJoining with `by = join_by(smpID)`\n\nggplot(medComTab, aes(x=Spectronaut,y = DIANN)) +\n  geom_point(aes(col = condition), size = 5)  +\n  theme_bw() +\n  xlab(\"Median expression by Spectronaut\") +\n  ylab(\"Median expression by DIANN\") +\n  #geom_abline(slope = 1, intercept = 0, color = \"red\") +\n  #xlim(0,8000) + ylim(0,8000) +\n  theme(legend.position = \"bottom\",\n        axis.text = element_text(size = 18),\n        axis.title = element_text(size = 20))\n\n\n\n# ggsave(\"medCompare.pdf\", height = 10, width = 9)\n\nggplot(medComTab, aes(x = Spectronaut, y = DIANN)) +\n  geom_point(aes(col = pelletSize), size = 5)  +\n  theme_bw() +\n  xlab(\"Median expression by Spectronaut\") +\n  ylab(\"Median expression by DIANN\") +\n  #geom_abline(slope = 1, intercept = 0, color = \"red\") +\n  #xlim(0,8000) + ylim(0,8000) +\n  theme(legend.position = \"bottom\",\n        axis.text = element_text(size = 18),\n        axis.title = element_text(size = 20))\n\n\n\n# ggsave(\"medCompare_pellet.pdf\", height = 10, width = 9)\n\nBoxplot\n\nggplot(comTab, aes(x = condition, y = medVal)) +\n  geom_boxplot(outlier.shape = NA) +\n  ggbeeswarm::geom_quasirandom(aes(col = condition)) +\n  facet_wrap(~software, ncol = 1, scale = \"free_y\") + \n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),\n        legend.position = \"none\",\n        plot.title = element_text(hjust = 0.5)) +\n  labs(y = \"median expression\", title = \"Before normalization\")\n\n\n\n# ggsave(\"medVal_beforeVsn.pdf\", height = 5, width = 6)"
  },
  {
    "objectID": "QA.html#after-normalization",
    "href": "QA.html#after-normalization",
    "title": "QA and Comparison",
    "section": "After normalization",
    "text": "After normalization\n\ndiannMat &lt;- assays(seDiann)$count\ndiannMat &lt;- diannMat[rowSums(is.na(diannMat))/ncol(diannMat) &lt; 0.5, ]\ndim(diannMat)\n\n[1] 6938  399\n\ndiannMat.vst &lt;- justvsn(diannMat)\n\nspecMat &lt;- assays(seSpec)$count\nspecMat &lt;- specMat[rowSums(is.na(specMat))/ncol(specMat) &lt; 0.5, ]\ndim(specMat)\n\n[1] 6107  399\n\nspecMat.vst &lt;- justvsn(specMat)\n\nmedTab.diann &lt;- tibble(smpID = colnames(diannMat),\n                       DIANN = colMedians(diannMat.vst, na.rm=TRUE))\n\nmedTab.spec &lt;- tibble(smpID = colnames(specMat),\n                      Spectronaut = colMedians(specMat.vst, na.rm=TRUE))\n\ncomTab.vst &lt;- left_join(medTab.diann, medTab.spec) %&gt;% left_join(smpAnno) %&gt;% \n  pivot_longer(c(DIANN,Spectronaut), names_to = \"software\", values_to = \"medVal\") %&gt;%\n  mutate(condition = factor(diag, levels = diagOrd))\n\nJoining with `by = join_by(smpID)`\nJoining with `by = join_by(smpID)`\n\n\n\nggplot(comTab.vst, aes(x = condition, y = medVal)) +\n  geom_boxplot(outlier.shape = NA) +\n  ggbeeswarm::geom_quasirandom(aes(col= condition)) +\n  facet_wrap(~software, ncol = 1, scale = \"free_y\") + \n  theme_bw() +\n  labs(y = \"median expression\", title = \"After vsn\") + \n  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),\n        legend.position = \"none\",\n        plot.title = element_text(hjust = 0.5))\n\n\n\n# ggsave(\"medVal_afterVsn.pdf\", height = 5, width = 6)"
  },
  {
    "objectID": "QA.html#spectronaut",
    "href": "QA.html#spectronaut",
    "title": "QA and Comparison",
    "section": "Spectronaut",
    "text": "Spectronaut\nSpectronaut has a outlier that has only 12 proteins.\n\nspecMatMiss &lt;- apply(as.matrix(is.na(assay(seSpec[, -which(colnames(seSpec) %in% \"S454710\")]))), 2, as.numeric)\ncolAnno &lt;- smpAnno %&gt;% \n  mutate(diag = ifelse(diag %in% c(\"CLL\", \"healthy\", \"MCL\", \"HCL\", \"SMZL\", \"MZL\"), diag, \"other\")) %&gt;%\n  select(smpID, diag, pelletSize) %&gt;%\n  column_to_rownames(\"smpID\") %&gt;%\n  as.data.frame()\n\npheatmap(specMatMiss, show_rownames = FALSE, show_colnames = FALSE, treeheight_row = 0, treeheight_col = 0,\n         annotation_col = colAnno)\n\n\n\nmissRateSpec &lt;- tibble(rate = rowSums(specMatMiss)/ncol(specMatMiss),\n                       software = \"spectronaut\")\n\n\nplot_detect(seSpec[ , -which(colnames(seSpec) %in% \"S454710\")])"
  },
  {
    "objectID": "QA.html#diann",
    "href": "QA.html#diann",
    "title": "QA and Comparison",
    "section": "DIANN",
    "text": "DIANN\n\ndiannMatMiss &lt;- apply(as.matrix(is.na(assay(seDiann))), 2, as.numeric)\npheatmap(diannMatMiss, show_rownames = FALSE, show_colnames = FALSE, treeheight_row = 0, treeheight_col = 0,\n         annotation_col = colAnno)\n\n\n\nmissRateDiann &lt;- tibble(rate = rowSums(diannMatMiss)/ncol(diannMatMiss),\n                       software = \"diann\")\n\n\nplot_detect(seDiann)"
  },
  {
    "objectID": "QA.html#compare-spectronaut-and-diann",
    "href": "QA.html#compare-spectronaut-and-diann",
    "title": "QA and Comparison",
    "section": "Compare Spectronaut and DIANN",
    "text": "Compare Spectronaut and DIANN\n\nmissRateCom &lt;- bind_rows(missRateSpec, missRateDiann)\nggplot(missRateCom, aes(x = rate, fill = software)) +\n  geom_density(position = \"identity\", alpha = 0.5) +\n  xlab(\"missing value rate\") +\n  theme_bw() +\n  theme(axis.text = element_text(size=15),\n        axis.title = element_text(size=15))\n\n\n\n\n\nmissCutDF &lt;- lapply(seq(0, 1, by = 0.1), function(cutoff){\n  data &lt;- missRateCom %&gt;%\n    mutate(id = paste0(\"id\", nrow(.))) %&gt;%\n    group_by(software) %&gt;%\n    summarise(`Cumulative proportion` = sum(rate &lt;= cutoff)/length(id)) %&gt;%\n    ungroup()\n  data$`missRate cutoff` &lt;- cutoff\n  data\n}) %&gt;% bind_rows()\nmissCutDF %&gt;% ggplot(aes(x = `missRate cutoff`, y = `Cumulative proportion`, col = software)) +\n  geom_line(size = 2) +\n  theme_bw() +\n  xlab(\"Allowed missing value rate\") +\n  ylab(\"Remaining proteins (%)\") +\n  theme(axis.text = element_text(size = 15),\n        axis.title = element_text(size = 15))\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead."
  },
  {
    "objectID": "QA.html#commonly-detected-proteins",
    "href": "QA.html#commonly-detected-proteins",
    "title": "QA and Comparison",
    "section": "Commonly detected proteins",
    "text": "Commonly detected proteins\n\nGene level\n\nggvenn::ggvenn(list(\"DIANN\" = unique(rowData(seDiann)$geneID), \n                    \"Spectronaut\" = unique(rowData(seSpec)$geneID))) +\n  ggtitle(\"Gene level\") +\n  theme(plot.title = element_text(hjust = 0.5, size = 15))\n\n\n\n\nAt least 50% detection rate\n\nseDiann.sub &lt;- seDiann[rowSums(is.na(assay(seDiann)))/ncol(seDiann) &lt; 0.5,]\nseSpec.sub &lt;- seSpec[rowSums(is.na(assay(seSpec)))/ncol(seSpec) &lt; 0.5,]\n\n#at least\nggvenn::ggvenn(list(\"DIANN\" = unique(rowData(seDiann.sub)$geneID), \n                    \"Spectronaut\" = unique(rowData(seSpec.sub)$geneID))) +\n  ggtitle(\"After filter proteins of 50% missing rate\") +\n  theme(plot.title = element_text(hjust = 0.5, size = 15))"
  },
  {
    "objectID": "QA.html#protein-level",
    "href": "QA.html#protein-level",
    "title": "QA and Comparison",
    "section": "protein level",
    "text": "protein level\n\nggvenn::ggvenn(list(\"DIANN\" = unique(rowData(seDiann)$protID), \n                    \"Spectronaut\" = unique(rowData(seSpec)$protID)))+\n  ggtitle(\"Protein level\") +\n  theme(plot.title = element_text(hjust = 0.5, size = 15))\n\n\n\n\nAt least 50% detection rate\n\n#at least\nggvenn::ggvenn(list(\"DIANN\" = unique(rowData(seDiann.sub)$protID), \n                    \"Spectronaut\" = unique(rowData(seSpec.sub)$protID))) +\n  ggtitle(\"After filter proteins of 50% missing rate\") +\n  theme(plot.title = element_text(hjust = 0.5, size = 15))"
  },
  {
    "objectID": "QA.html#expression-level",
    "href": "QA.html#expression-level",
    "title": "QA and Comparison",
    "section": "Expression level",
    "text": "Expression level\n\n#define detection group\nll &lt;- list(\"DIANN\" = unique(rowData(seDiann)$protID), \n           \"Spectronaut\" = unique(rowData(seSpec)$protID))\ndetGroup &lt;- list(onlyDiann = setdiff(ll$DIANN, ll$Spectronaut),\n                 onlySpec = setdiff(ll$Spectronaut, ll$DIANN),\n                 both = intersect(ll$DIANN, ll$Spectronaut))\n\nvstTab.spec &lt;- specMat.vst %&gt;% as_tibble(rownames = \"id\") %&gt;% pivot_longer(-id) %&gt;% mutate(software = \"Spectronaut\", protID = rowData(seSpec)[id,]$protID) \nvstTab.diann &lt;- diannMat.vst %&gt;% as_tibble(rownames = \"id\") %&gt;% pivot_longer(-id) %&gt;% mutate(software = \"DIANN\", protID = rowData(seDiann)[id,]$protID)\nvstTab &lt;- bind_rows(vstTab.spec, vstTab.diann) %&gt;%\n  pivot_wider(names_from = software, values_from = value)\n\n\nplotTab &lt;- mutate(vstTab, group = case_when(\n    protID %in% detGroup$onlySpec ~ \"only Spectronaut\",\n    protID %in% detGroup$onlyDiann ~ \"only DIANN\",\n    protID %in% detGroup$both ~ \"both\"\n  )) %&gt;%\n  pivot_longer(c(Spectronaut,DIANN), names_to = \"software\", values_to = \"value\")\n\nggplot(plotTab, aes(x = value, fill = group)) +\n  geom_density(position = \"identity\", alpha = 0.5) +\n  facet_wrap(~software) +\n  theme_bw() +\n  theme(axis.text = element_text(size = 15),\n        axis.title = element_text(size = 15))\n\nWarning: Removed 1399790 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\n\nmissRateTab &lt;- group_by(plotTab, group, protID, software) %&gt;%\n  summarise(missRate = sum(is.na(value))/length(name)) %&gt;%\n  filter(missRate &lt;1)\n\n`summarise()` has grouped output by 'group', 'protID'. You can override using\nthe `.groups` argument.\n\nggplot(missRateTab, aes(x=missRate, fill = group)) +\n  geom_density(position = \"identity\", alpha = 0.5) +\n  facet_wrap(~software) +\n  theme_bw() +\n  theme(axis.text = element_text(size = 15),\n        axis.title = element_text(size = 15))\n\n\n\n\n\nvarTab &lt;- group_by(plotTab, group, protID, software) %&gt;%\n  filter(!is.na(value)) %&gt;%\n  summarise(var = sd(value)/mean(value))\n\n`summarise()` has grouped output by 'group', 'protID'. You can override using\nthe `.groups` argument.\n\nggplot(varTab, aes(x = var, fill = group)) +\n  geom_density(position = \"identity\", alpha=0.5) +\n  facet_wrap(~software) +\n  theme_bw() +\n  theme(axis.text = element_text(size=15),\n        axis.title = element_text(size=15))"
  },
  {
    "objectID": "QA.html#reproducibility",
    "href": "QA.html#reproducibility",
    "title": "QA and Comparison",
    "section": "Reproducibility",
    "text": "Reproducibility\n\ncorResTab &lt;- filter(vstTab, !is.na(Spectronaut), !is.na(DIANN)) %&gt;%\n  select(-protID) %&gt;%\n  group_by(id) %&gt;% \n  nest() %&gt;%\n  mutate(m = map(data, ~cor(.$Spectronaut,.$DIANN))) %&gt;%\n  mutate(res = map(m, broom::tidy)) %&gt;%\n  unnest(res)\n\nggplot(corResTab, aes(x=x)) +\n  geom_histogram(fill = \"lightblue\", alpha = .5,col = \"blue\") +\n  geom_vline(xintercept = median(corResTab$x), color = \"red\") +\n  xlab(\"Pearson correlation coefficient\") +\n  theme_bw()+\n  theme(axis.text = element_text(size=15),\n        axis.title = element_text(size=15))"
  },
  {
    "objectID": "QA.html#within-healthy-donors",
    "href": "QA.html#within-healthy-donors",
    "title": "QA and Comparison",
    "section": "Within healthy donors",
    "text": "Within healthy donors\n\n#identify real replicates\npatTab &lt;- colData(seSpec) %&gt;% as_tibble(rownames = \"smpID\") \nhealthyTab &lt;- filter(patTab, diag == \"healthy\")\ntable(healthyTab$patID)\n\n\n  Donor 1205 Donor 171532 Donor 171590 Donor 171779 Donor 171944   Donor 2204 \n           4            2            4            4            3            3 \n  Donor 3206   Donor 3208   Donor 4208   Donor 9200   Donor 9209 \n           2            3            3            4            3 \n\n\nEvery healthy donors have replicates\n\nSpectronaut\nPCA\n\nseSub &lt;- seSpec[, healthyTab$smpID]\nseSub &lt;- seSub[rowSums(is.na(assay(seSub)))/ncol(seSub) &lt; 0.5,]\nexprMat.vst &lt;- vsn::justvsn(assays(seSub)$count)\nassay(seSub) &lt;- exprMat.vst\nseSub.imput &lt;- DEP::impute(seSub, \"QRILC\")\n\nImputing along margin 2 (samples/columns).\n\npcRes &lt;- prcomp(t(assay(seSub.imput)), center = TRUE, scale. = TRUE)\n\npcTab &lt;- pcRes$x %&gt;% as_tibble(rownames = \"smpID\") %&gt;%\n  left_join(healthyTab)\n\nJoining with `by = join_by(smpID)`\n\nggplot(pcTab, aes(x = PC1, y = PC2, col = patID)) +\n  geom_point(aes(size = pelletSize, shape = sampleType)) +\n  geom_line(linetype = \"dotted\") +\n  theme_bw() + theme(axis.text = element_text(size = 15),\n                     axis.title = element_text(size = 15))\n\n\n\n\nHeatmap\n\nplotMat &lt;- assay(seSub.imput)\ncolAnno &lt;- healthyTab %&gt;% select(smpID, patID, pelletSize, sampleID, sampleType) %&gt;%\n   column_to_rownames(\"smpID\")\npheatmap(plotMat, annotation_col = colAnno, show_rownames = FALSE, show_colnames = FALSE, \n         scale = \"row\", treeheight_row = 0)\n\n\n\n\n\n\nDIANN\nPCA\n\nseSub &lt;- seDiann[, healthyTab$smpID]\nseSub &lt;- seSub[rowSums(is.na(assay(seSub)))/ncol(seSub) &lt; 0.5,]\nexprMat.vst &lt;- vsn::justvsn(assays(seSub)$count)\nassay(seSub) &lt;- exprMat.vst\nseSub.imput &lt;- DEP::impute(seSub, \"QRILC\")\n\nImputing along margin 2 (samples/columns).\n\npcRes &lt;- prcomp(t(assay(seSub.imput)), center = TRUE, scale. = TRUE)\n\npcTab &lt;- pcRes$x %&gt;% as_tibble(rownames = \"smpID\") %&gt;%\n  left_join(healthyTab)\n\nJoining with `by = join_by(smpID)`\n\nggplot(pcTab, aes(x = PC1, y = PC2, col = patID)) +\n  geom_point(aes(size = pelletSize, shape = sampleType)) +\n  geom_line(linetype = \"dotted\") +\n  theme_bw() + theme(axis.text = element_text(size = 15),\n                    axis.title = element_text(size = 15))\n\n\n\n\nHeatmap\n\nplotMat &lt;- assay(seSub.imput)\ncolAnno &lt;- healthyTab %&gt;% select(smpID, patID, pelletSize, sampleID, sampleType) %&gt;%\n   column_to_rownames(\"smpID\")\npheatmap(plotMat, annotation_col = colAnno, show_rownames = FALSE, show_colnames = FALSE, \n         scale = \"row\", treeheight_row = 0)"
  },
  {
    "objectID": "QA.html#within-cll-samples",
    "href": "QA.html#within-cll-samples",
    "title": "QA and Comparison",
    "section": "Within CLL samples",
    "text": "Within CLL samples\n\n#identify real replicates\ncllTab &lt;- filter(patTab, diag == \"CLL\", set ==\"CLL\")\npatNum &lt;- table(cllTab$patID)\n\nsort(patNum, decreasing = TRUE)\n\n\n PID279  PID301  PID883  PID907 PID1013 PID1015 PID1016 PID1022 PID1024 PID1035 \n      2       2       2       2       1       1       1       1       1       1 \nPID1036 PID1065 PID1068 PID1077 PID1086 PID1091 PID1095 PID1098 PID1102 PID1128 \n      1       1       1       1       1       1       1       1       1       1 \nPID1133 PID1165 PID1167 PID1171 PID1173 PID1176 PID1177 PID1179 PID1192 PID1199 \n      1       1       1       1       1       1       1       1       1       1 \n PID121 PID1210 PID1211 PID1222 PID1226 PID1228 PID1242 PID1247 PID1248 PID1260 \n      1       1       1       1       1       1       1       1       1       1 \nPID1276 PID1280 PID1285 PID1293 PID1301 PID1307 PID1318 PID1349 PID1382 PID1392 \n      1       1       1       1       1       1       1       1       1       1 \nPID1399 PID1437 PID1438 PID1439 PID1440 PID1454 PID1461 PID1462 PID1469 PID1489 \n      1       1       1       1       1       1       1       1       1       1 \nPID1494 PID1496 PID1511 PID1547 PID1565 PID1590 PID1591 PID1601 PID1602 PID1617 \n      1       1       1       1       1       1       1       1       1       1 \nPID1634 PID1637 PID1638 PID1644 PID1650 PID1673 PID1678 PID1705 PID1761 PID1791 \n      1       1       1       1       1       1       1       1       1       1 \nPID1876 PID1877 PID1976 PID1997 PID2031 PID2036 PID2060 PID2072 PID2089 PID2233 \n      1       1       1       1       1       1       1       1       1       1 \n PID229  PID239  PID263  PID305  PID512  PID518  PID528  PID674  PID675   PID74 \n      1       1       1       1       1       1       1       1       1       1 \n PID884  PID894  PID898  PID901  PID909  PID951  PID952  PID955  PID963  PID970 \n      1       1       1       1       1       1       1       1       1       1 \n\ncllTab &lt;- cllTab %&gt;% filter(patID %in% names(patNum[patNum &gt; 1]))\n\n\nSpectronaut\nPCA\n\nseSub &lt;- seSpec[, cllTab$smpID]\nseSub &lt;- seSub[rowSums(is.na(assay(seSub)))/ncol(seSub) &lt; 0.5,]\nexprMat.vst &lt;- vsn::justvsn(assays(seSub)$count)\nassay(seSub) &lt;- exprMat.vst\nseSub.imput &lt;- DEP::impute(seSub, \"QRILC\")\n\nImputing along margin 2 (samples/columns).\n\npcRes &lt;- prcomp(t(assay(seSub.imput)), center = TRUE, scale. = TRUE)\n\npcTab &lt;- pcRes$x %&gt;% as_tibble(rownames = \"smpID\") %&gt;%\n  left_join(cllTab)\n\nJoining with `by = join_by(smpID)`\n\nggplot(pcTab, aes(x = PC1, y = PC2, col = patID)) +\n  geom_point(aes(size = pelletSize, shape = sampleType)) +\n  geom_line(linetype = \"dotted\") +\n  theme_bw() + theme(axis.text = element_text(size = 15),\n                    axis.title = element_text(size = 15))\n\n\n\n\nHeatmap\n\nplotMat &lt;- assay(seSub.imput)\ncolAnno &lt;- cllTab %&gt;% select(smpID, patID, pelletSize, sampleType) %&gt;%\n   column_to_rownames(\"smpID\")\npheatmap(plotMat, annotation_col = colAnno, show_rownames = FALSE, show_colnames = FALSE, \n         scale = \"row\", treeheight_row = 0)\n\n\n\n\n\n\nDIANN\nPCA\n\nseSub &lt;- seDiann[, cllTab$smpID]\nseSub &lt;- seSub[rowSums(is.na(assay(seSub)))/ncol(seSub) &lt; 0.5,]\nexprMat.vst &lt;- vsn::justvsn(assays(seSub)$count)\nassay(seSub) &lt;- exprMat.vst\nseSub.imput &lt;- DEP::impute(seSub, \"QRILC\")\n\nImputing along margin 2 (samples/columns).\n\npcRes &lt;- prcomp(t(assay(seSub.imput)), center = TRUE, scale. = TRUE)\n\npcTab &lt;- pcRes$x %&gt;% as_tibble(rownames = \"smpID\") %&gt;%\n  left_join(cllTab)\n\nJoining with `by = join_by(smpID)`\n\nggplot(pcTab, aes(x = PC1, y = PC2, col = patID)) +\n  geom_point(aes(size = pelletSize, shape = sampleType)) +\n  geom_line(linetype = \"dotted\") +\n  theme_bw() + theme(axis.text = element_text(size = 15),\n                    axis.title = element_text(size = 15))\n\n\n\n\nHeatmap\n\nplotMat &lt;- assay(seSub.imput)\ncolAnno &lt;- cllTab %&gt;% select(smpID, patID, pelletSize, sampleType ) %&gt;%\n   column_to_rownames(\"smpID\")\npheatmap(plotMat, annotation_col = colAnno, show_rownames = FALSE, show_colnames = FALSE, \n         scale = \"row\", treeheight_row = 0)"
  },
  {
    "objectID": "QA.html#spectronaut-3",
    "href": "QA.html#spectronaut-3",
    "title": "QA and Comparison",
    "section": "Spectronaut",
    "text": "Spectronaut\nProcessing\n\nseSub &lt;- seSpec[, -which(colnames(seSpec) %in% \"S454710\")]\nseSub &lt;- seSub[rowSums(is.na(assay(seSub)))/ncol(seSub) &lt; 0.5, ]\nexprMat.vst &lt;- vsn::justvsn(assays(seSub)$count)\nassay(seSub) &lt;- exprMat.vst\nseSub.imput &lt;- DEP::impute(seSub, \"QRILC\")\n\nImputing along margin 2 (samples/columns).\n\npatTab &lt;- colData(seSub) %&gt;% as_tibble(rownames = \"smpID\") %&gt;%\n  mutate(diagSimple = ifelse(diag %in% c(\"CLL\", \"healthy\", \"MCL\", \"HCL\", \"SMZL\", \"MZL\"), diag, \"other\"))\n\n\nPerform PCA\n\npcRes &lt;- prcomp(t(assay(seSub.imput)), center = TRUE, scale. = TRUE)\n\npcTab &lt;- pcRes$x %&gt;% as_tibble(rownames = \"smpID\") %&gt;%\n  left_join(patTab)\n\nJoining with `by = join_by(smpID)`\n\nggplot(pcTab, aes(x = PC1, y = PC2, col = diagSimple, shape = sampleType)) +\n  geom_point(aes(size = pelletSize)) +\n  theme_bw() + theme(axis.text = element_text(size = 15),\n                    axis.title = element_text(size = 15))\n\n\n\nggplot(pcTab, aes(x = PC3, y = PC4, col = diagSimple, shape = sampleType)) +\n  geom_point(aes(size = pelletSize)) +\n  theme_bw() + theme(axis.text = element_text(size = 15),\n                    axis.title = element_text(size = 15))"
  },
  {
    "objectID": "QA.html#diann-3",
    "href": "QA.html#diann-3",
    "title": "QA and Comparison",
    "section": "DIANN",
    "text": "DIANN\nProcessing\n\nseSub &lt;- seDiann\nseSub &lt;- seSub[rowSums(is.na(assay(seSub)))/ncol(seSub) &lt; 0.5,]\nexprMat.vst &lt;- vsn::justvsn(assays(seSub)$count)\nassay(seSub) &lt;- exprMat.vst\nseSub.imput &lt;- DEP::impute(seSub, \"QRILC\")\n\nImputing along margin 2 (samples/columns).\n\npatTab &lt;- colData(seSub) %&gt;% as_tibble(rownames = \"smpID\") %&gt;%\n  mutate(diagSimple = ifelse(diag %in% c(\"CLL\", \"healthy\", \"MCL\", \"HCL\", \"SMZL\", \"MZL\"), diag, \"other\")) \n\n\nPerform PCA\n\npcRes &lt;- prcomp(t(assay(seSub.imput)), center = TRUE, scale. = TRUE)\n\npcTab &lt;- pcRes$x %&gt;% as_tibble(rownames = \"smpID\") %&gt;%\n  left_join(patTab)\n\nJoining with `by = join_by(smpID)`\n\nggplot(pcTab, aes(x = PC1, y = PC2, col = diagSimple, shape = sampleType)) +\n  geom_point(aes(size = pelletSize)) +\n  theme_bw() + theme(axis.text = element_text(size = 15),\n                     axis.title = element_text(size = 15))\n\n\n\nggplot(pcTab, aes(x = PC3, y = PC4, col = diagSimple, shape = sampleType)) +\n  geom_point(aes(size = pelletSize)) +\n  theme_bw() + theme(axis.text = element_text(size = 15),\n                     axis.title = element_text(size = 15))"
  },
  {
    "objectID": "QA.html#spectronaut-4",
    "href": "QA.html#spectronaut-4",
    "title": "QA and Comparison",
    "section": "Spectronaut",
    "text": "Spectronaut\nProcessing\n\nseSub &lt;- seSpec[, -which(colnames(seSpec) %in% \"S454710\")]\nseSub &lt;- seSub[, seSub$diag != \"healthy\" & seSub$pelletSize &gt; 0.2]\nseSub &lt;- seSub[rowSums(is.na(assay(seSub)))/ncol(seSub) &lt; 0.5, ]\nexprMat.vst &lt;- vsn::justvsn(assays(seSub)$count)\nassay(seSub) &lt;- exprMat.vst\nseSub.imput &lt;- DEP::impute(seSub, \"QRILC\")\n\nImputing along margin 2 (samples/columns).\n\npatTab &lt;- colData(seSub) %&gt;% as_tibble(rownames = \"smpID\") %&gt;%\n  mutate(diagSimple = ifelse(diag %in% c(\"CLL\", \"healthy\", \"MCL\", \"HCL\", \"SMZL\", \"MZL\"), diag, \"other\")) \n\n\nPerform PCA\n\npcRes &lt;- prcomp(t(assay(seSub.imput)), center = TRUE, scale. = TRUE)\n\npcTab &lt;- pcRes$x %&gt;% as_tibble(rownames = \"smpID\") %&gt;%\n  left_join(patTab)\n\nJoining with `by = join_by(smpID)`\n\nggplot(pcTab, aes(x = PC1, y = PC2, col = diagSimple, shape = sampleType)) +\n  geom_point(aes(size = pelletSize)) +\n    theme_bw() + theme(axis.text = element_text(size=15),\n                     axis.title = element_text(size = 15))\n\n\n\nggplot(pcTab, aes(x = PC3, y = PC4, col = diagSimple, shape = sampleType)) +\n  geom_point(aes( size= pelletSize)) +\n  theme_bw() + theme(axis.text = element_text(size = 15),\n                    axis.title = element_text(size = 15))"
  },
  {
    "objectID": "QA.html#diann-4",
    "href": "QA.html#diann-4",
    "title": "QA and Comparison",
    "section": "DIANN",
    "text": "DIANN\nProcessing\n\nseSub &lt;- seDiann[, seDiann$diag != \"healthy\" & seDiann$pelletSize &gt; 0.2]\nseSub &lt;- seSub[rowSums(is.na(assay(seSub)))/ncol(seSub) &lt; 0.5,]\nexprMat.vst &lt;- vsn::justvsn(assays(seSub)$count)\nassay(seSub) &lt;- exprMat.vst\nseSub.imput &lt;- DEP::impute(seSub, \"QRILC\")\n\nImputing along margin 2 (samples/columns).\n\npatTab &lt;- colData(seSub) %&gt;% as_tibble(rownames = \"smpID\") %&gt;%\n  mutate(diagSimple = ifelse(diag %in% c(\"CLL\", \"healthy\", \"MCL\", \"HCL\", \"SMZL\", \"MZL\"), diag, \"other\")) \n\n\nPerform PCA\n\npcRes &lt;- prcomp(t(assay(seSub.imput)), center = TRUE, scale. = TRUE)\n\npcTab &lt;- pcRes$x %&gt;% as_tibble(rownames = \"smpID\") %&gt;%\n  left_join(patTab)\n\nJoining with `by = join_by(smpID)`\n\nggplot(pcTab, aes(x = PC1, y = PC2, col = diagSimple, shape = sampleType)) +\n  geom_point(aes(size = pelletSize)) +\n  theme_bw() + theme(axis.text = element_text(size = 15),\n                     axis.title = element_text(size = 15))\n\n\n\nggplot(pcTab, aes(x = PC3, y = PC4, col = diagSimple, shape = sampleType)) +\n  geom_point(aes(size = pelletSize)) +\n  theme_bw() + theme(axis.text = element_text(size = 15),\n                     axis.title = element_text(size = 15))"
  },
  {
    "objectID": "Diann_QC.html#comparison-before-and-after-normalization",
    "href": "Diann_QC.html#comparison-before-and-after-normalization",
    "title": "Diann_QC",
    "section": "comparison before and after normalization",
    "text": "comparison before and after normalization\n\nDEP::meanSdPlot(seDiann)\n\n\n\nDEP::meanSdPlot(seSub)\n\n\n\n\n\n# log2 plot\npreData %&gt;%\n  ggplot(aes(x = ID, y = count, fill = diag)) +\n  geom_boxplot(outlier.shape = NA) +\n  theme(axis.text.y = element_blank(), legend.position = \"bottom\", plot.title = element_text(hjust = 0.5)) + \n  scale_fill_manual(values = cusCols) +\n  coord_flip() +\n  ggtitle(\"Distribuiton per sample (log2 transformation without normalisation)\")\n\n\n\n# Plot after filtering and vsn\npostData &lt;- assay(seSub) %&gt;% as_tibble(rownames = \"protID\") %&gt;%\n  pivot_longer(-protID, names_to = \"smpID\", values_to = \"count\") %&gt;%\n  filter(!is.na(count)) %&gt;%\n  left_join(smpAnno)\n\nJoining with `by = join_by(smpID)`\n\npostData %&gt;% \n  ggplot(aes(x = ID, y = count, fill = diag)) +\n  geom_boxplot(outlier.shape = NA) +\n  theme(axis.text.y = element_blank(), legend.position = \"bottom\", plot.title = element_text(hjust = 0.5)) + \n  scale_fill_manual(values = cusCols) +\n  coord_flip() +\n  ggtitle(\"Distribuiton per sample (vsn)\")"
  },
  {
    "objectID": "Diann_QC.html#all-samples",
    "href": "Diann_QC.html#all-samples",
    "title": "Diann_QC",
    "section": "All samples",
    "text": "All samples\n\n# perform PCA\npcRes &lt;- prcomp(t(assays(seAll)$qrilc), center = TRUE, scale. = TRUE)\n\npcTab &lt;- pcRes$x %&gt;% as_tibble(rownames = \"smpID\") %&gt;%\n  left_join(patTab)\n\n# check and process batch factors first\n## sampleType, patID\nknitr::kable(sort(table(pcTab$sampleType), decreasing = TRUE))\n\n\n\n\nVar1\nFreq\n\n\n\n\nPB\n356\n\n\nBM aspirate\n28\n\n\nSpleen\n13\n\n\nPleural effusion\n1\n\n\nSpleen biopsy\n1\n\n\n\n\nknitr::kable(t(sort(table(pcTab$patID), decreasing = TRUE)))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPID1712\nPID1564\nPID497\nPID935\nDonor 1205\nDonor 171590\nDonor 171779\nDonor 9200\nP0050\nP0314\nP0353\nP0777\nPID1191\nPID1457\nPID1691\nPID1913\nPID859\nPID934\nPID940\nDonor 171944\nDonor 2204\nDonor 3208\nDonor 4208\nDonor 9209\nP0508\nP0734\nPID1009\nPID1023\nPID1146\nPID1201\nPID1203\nPID1229\nPID1264\nPID1340\nPID1418\nPID1419\nPID1662\nPID1844\nPID2105\nDonor 171532\nDonor 3206\nP0641\nP0782\nP1151\nPID1014\nPID1027\nPID110\nPID1109\nPID1200\nPID1246\nPID1344\nPID1350\nPID1359\nPID1450\nPID1456\nPID1517\nPID1561\nPID1579\nPID1624\nPID1670\nPID1694\nPID1704\nPID1893\nPID1982\nPID2168\nPID279\nPID301\nPID883\nPID907\nPID961\nP0034\nP0057\nP0350\nP0361\nP0435\nP0444\nP0453\nP0511\nP0520\nP0527\nP0534\nP0535\nP0573\nP0584\nP0599\nP0680\nP0682\nP0683\nP0709\nP0710\nP0739\nP0744\nP0758\nP0761\nP0773\nP0774\nP0785\nP0819\nP0825\nP0892\nP0994\nP1001\nP1006\nP1029\nP1043\nP1057\nP1060\nP1063\nP1067\nP1137\nP1154\nP1225\nP1295\nPID1013\nPID1015\nPID1016\nPID1022\nPID1024\nPID1035\nPID1036\nPID1039\nPID1045\nPID1046\nPID1065\nPID1068\nPID1077\nPID1081\nPID1086\nPID1091\nPID1092\nPID1095\nPID1098\nPID1102\nPID1113\nPID1122\nPID1128\nPID1133\nPID1137\nPID1165\nPID1167\nPID1170\nPID1171\nPID1173\nPID1176\nPID1177\nPID1179\nPID1192\nPID1199\nPID121\nPID1210\nPID1211\nPID1222\nPID1226\nPID1228\nPID1242\nPID1247\nPID1248\nPID1258\nPID1260\nPID1274\nPID1276\nPID1280\nPID1285\nPID1293\nPID1301\nPID1307\nPID1318\nPID1332\nPID1342\nPID1349\nPID1370\nPID1371\nPID1382\nPID1392\nPID1399\nPID1420\nPID1437\nPID1438\nPID1439\nPID1440\nPID1454\nPID1461\nPID1462\nPID1469\nPID1470\nPID1485\nPID1489\nPID1494\nPID1496\nPID1511\nPID1516\nPID1547\nPID1557\nPID1565\nPID1590\nPID1591\nPID1601\nPID1602\nPID1603\nPID1617\nPID1634\nPID1637\nPID1638\nPID1644\nPID1650\nPID1653\nPID1663\nPID1673\nPID1677\nPID1678\nPID1684\nPID1705\nPID1732\nPID1761\nPID1784\nPID1791\nPID1876\nPID1877\nPID1912\nPID1976\nPID1997\nPID2031\nPID2036\nPID2060\nPID2072\nPID2089\nPID2115\nPID2202\nPID2224\nPID2233\nPID229\nPID2304\nPID239\nPID2431\nPID263\nPID305\nPID436\nPID450\nPID512\nPID518\nPID528\nPID647\nPID674\nPID675\nPID74\nPID770\nPID865\nPID884\nPID889\nPID894\nPID898\nPID901\nPID903\nPID909\nPID951\nPID952\nPID955\nPID957\nPID963\nPID970\nPID976\nPID982\nPID985\nPID988\nPID989\n\n\n\n\n7\n5\n5\n5\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n\n\n\n\npcTab &lt;- pcTab %&gt;%\n  mutate(sampleType = factor(ifelse(sampleType %in% c(\"PB\", \"BM aspirate\", \"Spleen\"), sampleType, \"others\")), \n         patID = factor(patID))\n\n\nadjusted p values\n\n# anova\nbatVec &lt;- c(\"pelletSize\", \"sampleType\", \"patID\")\npvalTab &lt;- lapply(batVec, function(fac){\n  print(fac)\n  sapply(colnames(pcRes$x), function(pc){\n    ifelse(fac == \"pelletSize\",\n           cor.test(pcTab[[pc]], pcTab$pelletSize, method = \"kendall\")$p.value,\n           summary(aov(as.formula(paste0(pc, \"~\", fac)), pcTab))[[1]][[\"Pr(&gt;F)\"]][1])\n    }) %&gt;% p.adjust(\"BH\")\n}) %&gt;% do.call(rbind, .)\n\n[1] \"pelletSize\"\n[1] \"sampleType\"\n[1] \"patID\"\n\nrownames(pvalTab) &lt;- batVec\n\n# extract significant pcs\nlogPTab &lt;- pvalTab %&gt;% as_tibble(rownames = \"Batch factor\") %&gt;%\n  pivot_longer(-`Batch factor`, names_to = \"PC\", values_to = \"adj.p-value\") %&gt;%\n  separate(col = \"PC\", into = c(\"a\", \"PC\"), sep = \"PC\") %&gt;%\n  select(-a) %&gt;%\n  group_by(`Batch factor`) %&gt;%\n  mutate(PC = factor(PC, levels = PC)) %&gt;%\n  ungroup() %&gt;%\n  filter(`adj.p-value` &lt; 0.01) %&gt;%\n  mutate(\"-log(adj.p-value)\" = -log(`adj.p-value`)) \n\n# plot\nlogPTab %&gt;%\n  ggplot(aes(x = PC, y = `-log(adj.p-value)`, fill = `Batch factor`)) +\n  geom_bar(stat = \"identity\") + \n  theme_bw() + \n  theme(axis.text.x = element_text(angle = 90, size = 8), \n        axis.text.y = element_text(size = 10),\n        plot.title = element_text(hjust = 0.5)) +\n  labs(title = bquote(\"Extracting p-value &lt; 0.01 with\" ~ bold('All samples'))) + facet_wrap(~`Batch factor`, ncol = 1)\n\n\n\n\n\n\nbatch correction\n\ndesign0 &lt;- model.matrix(~diagSimple, data = pcTab)\nall_batch &lt;- removeBatchEffect(assays(seAll)$qrilc, \n                               batch = pcTab$pelletSize,\n                               batch2 = pcTab$sampleType,\n                               design = design0)\n\nCoefficients not estimable: batch55 \n\n\nWarning: Partial NA coefficients for 6938 probe(s)\n\n# perform PCA\npcRes_batch &lt;- prcomp(t(all_batch), center = TRUE, scale. = TRUE)\n\npcTab_batch &lt;- pcRes_batch$x %&gt;% as_tibble(rownames = \"smpID\") %&gt;%\n  left_join(patTab) %&gt;% \n  mutate(sampleType = factor(ifelse(sampleType %in% c(\"PB\", \"BM aspirate\", \"Spleen\"), sampleType, \"others\")), \n         patID = factor(patID))\n\nJoining with `by = join_by(smpID)`\n\n# correlation test and anova\npvalTab_batch &lt;- lapply(batVec, function(fac){\n  print(fac)\n  sapply(colnames(pcRes_batch$x), function(pc){\n    ifelse(fac == \"pelletSize\", \n           cor.test(pcTab_batch[[pc]], pcTab_batch$pelletSize, method = \"kendall\")$p.value,\n           summary(aov(as.formula(paste0(pc, \"~\", fac)), pcTab_batch))[[1]][[\"Pr(&gt;F)\"]][1])\n    }) %&gt;% p.adjust(\"BH\")\n}) %&gt;% do.call(rbind, .)\n\n[1] \"pelletSize\"\n[1] \"sampleType\"\n[1] \"patID\"\n\nrownames(pvalTab_batch) &lt;- batVec\n\n\n\nboxplot of comparison\n\n# PC1: sampleType significant\npcTab %&gt;%\n  ggplot(aes(x = sampleType, y = PC1, fill = sampleType)) +\n  geom_boxplot() +\n  labs(title = paste0(\"sampleType: p-value is \", format(pvalTab[\"sampleType\", \"PC1\"], digits = 2), \n                      \" before batch correction\"))\n\n\n\npcTab_batch %&gt;%\n  ggplot(aes(x = sampleType, y = PC1, fill = sampleType)) +\n  geom_boxplot() +\n  labs(title = paste0(\"sampleType: p-value is \", format(pvalTab_batch[\"sampleType\", \"PC1\"], digits = 2), \n                      \" after batch correction\"))\n\n\n\n# PC1: pelletSize significant\npcTab %&gt;%\n  ggplot(aes(x = pelletSize, y = PC1)) +\n  geom_point() +\n  labs(title = paste0(\"pelletSize: p-value is \", format(pvalTab[\"pelletSize\", \"PC1\"], digits = 2),\n                      \" before batch correction\"))\n\n\n\npcTab_batch %&gt;%\n  ggplot(aes(x = pelletSize, y = PC1)) +\n  geom_point() +\n  labs(title = paste0(\"pelletSize: p-value is \", format(pvalTab_batch[\"pelletSize\", \"PC1\"], digits = 2),\n                      \" after batch correction\"))"
  },
  {
    "objectID": "Diann_QC.html#healthy-samples",
    "href": "Diann_QC.html#healthy-samples",
    "title": "Diann_QC",
    "section": "Healthy samples",
    "text": "Healthy samples\n\nbatVec &lt;- c(\"pelletSize\", \"sampleType\", \"patID\")\n# vsn and imputaion\nseHthy &lt;- seDiann[, filter(patTab, diagSimple == \"healthy\")$smpID]\nseHthy &lt;- seHthy[rowSums(is.na(assay(seHthy)))/ncol(seHthy) &lt; 0.5, ]\nexprMat.vst &lt;- vsn::justvsn(assays(seHthy)$count)\nseHthy &lt;- SummarizedExperiment(assays = exprMat.vst, \n                              colData = colData(seHthy), \n                              rowData = rowData(seHthy))\nseHthy.imput &lt;- DEP::impute(seHthy, \"QRILC\")\n\nImputing along margin 2 (samples/columns).\n\n# pca\npcRes &lt;- prcomp(t(assay(seHthy.imput)), center = TRUE, scale. = TRUE)\n\npcTab &lt;- pcRes$x %&gt;% as_tibble(rownames = \"smpID\") %&gt;%\n  left_join(patTab) %&gt;% \n  mutate(sampleType = factor(sampleType), patID = factor(patID))\n\nJoining with `by = join_by(smpID)`\n\n# check and process batch factors first\n## sampleType, patID\nknitr::kable(sort(table(pcTab$sampleType), decreasing = TRUE))\n\n\n\n\nVar1\nFreq\n\n\n\n\nPB\n22\n\n\nSpleen\n13\n\n\n\n\nknitr::kable(t(sort(table(pcTab$patID), decreasing = TRUE)))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDonor 1205\nDonor 171590\nDonor 171779\nDonor 9200\nDonor 171944\nDonor 2204\nDonor 3208\nDonor 4208\nDonor 9209\nDonor 171532\nDonor 3206\n\n\n\n\n4\n4\n4\n4\n3\n3\n3\n3\n3\n2\n2\n\n\n\n\n\n\nadjusted p values\n\n# correlation test and anova\npvalTab &lt;- lapply(batVec, function(fac){\n  print(fac)\n  sapply(colnames(pcRes$x), function(pc){\n    ifelse(fac == \"pelletSize\",\n           cor.test(pcTab[[pc]], pcTab$pelletSize, method = \"kendall\", exact = FALSE)$p.value,\n           kruskal.test(as.formula(paste0(pc, \"~\", fac)), pcTab)$p.value) #summary(aov(as.formula(paste0(pc, \"~\", fac)), pcTab))[[1]][[\"Pr(&gt;F)\"]][1]\n    }) %&gt;% p.adjust(\"BH\")\n}) %&gt;% do.call(rbind, .)\n\n[1] \"pelletSize\"\n[1] \"sampleType\"\n[1] \"patID\"\n\nrownames(pvalTab) &lt;- batVec\n\n# extract significant pcs\nlogPTab &lt;- pvalTab %&gt;% as_tibble(rownames = \"Batch factor\") %&gt;%\n  pivot_longer(-`Batch factor`, names_to = \"PC\", values_to = \"adj.p-value\") %&gt;%\n  left_join(as_tibble(summary(pcRes)$importance[\"Proportion of Variance\", ] * 100, rownames = \"PC\"), by = c(\"PC\" = \"PC\")) %&gt;%\n  filter(`adj.p-value` &lt; 0.01) %&gt;%\n  separate(col = \"PC\", into = c(\"a\", \"PC\"), sep = \"PC\") %&gt;%\n  select(-a) %&gt;%\n  mutate(PC = factor(PC, levels = sort(as.numeric(unique(PC)))),\n         \"explained variance\" = paste0(PC, \" (\", value, \"%)\"), \n         \"-log(adj.p-value)\" = -log(`adj.p-value`))\n\n\n\nboxplot\n\n# PC1: pelletSize significant\npcTab%&gt;%\n  ggplot(aes(x = pelletSize, y = PC1)) +\n  geom_point() +\n  labs(title = paste0(\"pelletSize: p-value is \", \n                      format(pvalTab[\"pelletSize\", \"PC1\"], digits = 2)))\n\n\n\n# PC1: sampleType significant\npcTab %&gt;%\n  ggplot(aes(x = sampleType, y = PC1, fill = sampleType)) +\n  geom_boxplot() +\n  labs(title = paste0(\"sampleType: p-value is \", \n                      format(pvalTab[\"sampleType\", \"PC1\"], digits = 2)))"
  },
  {
    "objectID": "Diann_QC.html#without-healthy-samples",
    "href": "Diann_QC.html#without-healthy-samples",
    "title": "Diann_QC",
    "section": "Without healthy samples",
    "text": "Without healthy samples\n\n# vsn and imputaion\nseNoHthy &lt;- seDiann[, filter(patTab, diagSimple != \"healthy\" & !(sampleType %in% c(\"Pleural effusion\", \"Spleen biopsy\")))$smpID]\nseNoHthy &lt;- seNoHthy[rowSums(is.na(assay(seNoHthy)))/ncol(seNoHthy) &lt; 0.5, ]\nexprMat.vst &lt;- vsn::justvsn(assays(seNoHthy)$count)\nseNoHthy &lt;- SummarizedExperiment(assays = exprMat.vst, \n                                 colData = colData(seNoHthy), \n                                 rowData = rowData(seNoHthy))\nseNoHthy.imput &lt;- DEP::impute(seNoHthy, \"QRILC\")\n\nImputing along margin 2 (samples/columns).\n\n# pca\npcRes &lt;- prcomp(t(assay(seNoHthy.imput)), center = TRUE, scale. = TRUE)\n\npcTab &lt;- pcRes$x %&gt;% as_tibble(rownames = \"smpID\") %&gt;%\n  left_join(patTab) %&gt;%\n  mutate(sampleType = factor(sampleType), \n         patID = factor(patID))\n\nJoining with `by = join_by(smpID)`\n\n# check and process batch factors first\n## sampleType, patID\nknitr::kable(sort(table(pcTab$sampleType), decreasing = TRUE))\n\n\n\n\nVar1\nFreq\n\n\n\n\nPB\n334\n\n\nBM aspirate\n28\n\n\n\n\nknitr::kable(t(sort(table(pcTab$patID), decreasing = TRUE)))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPID1712\nPID1564\nPID497\nPID935\nP0050\nP0314\nP0353\nP0777\nPID1191\nPID1457\nPID1691\nPID1913\nPID859\nPID934\nPID940\nP0508\nP0734\nPID1009\nPID1023\nPID1146\nPID1201\nPID1203\nPID1229\nPID1264\nPID1340\nPID1418\nPID1419\nPID1662\nPID1844\nPID2105\nP0641\nP0782\nP1151\nPID1014\nPID1027\nPID110\nPID1109\nPID1200\nPID1246\nPID1344\nPID1350\nPID1359\nPID1450\nPID1456\nPID1517\nPID1561\nPID1579\nPID1624\nPID1670\nPID1694\nPID1704\nPID1893\nPID1982\nPID2168\nPID279\nPID301\nPID883\nPID907\nPID961\nP0034\nP0057\nP0350\nP0361\nP0435\nP0444\nP0453\nP0511\nP0520\nP0527\nP0534\nP0535\nP0573\nP0584\nP0599\nP0680\nP0682\nP0683\nP0709\nP0710\nP0739\nP0744\nP0758\nP0761\nP0773\nP0774\nP0785\nP0819\nP0825\nP0892\nP0994\nP1001\nP1006\nP1029\nP1043\nP1057\nP1060\nP1063\nP1067\nP1137\nP1154\nP1225\nP1295\nPID1013\nPID1015\nPID1016\nPID1022\nPID1024\nPID1035\nPID1036\nPID1039\nPID1045\nPID1046\nPID1065\nPID1068\nPID1077\nPID1081\nPID1086\nPID1091\nPID1092\nPID1095\nPID1098\nPID1102\nPID1113\nPID1122\nPID1128\nPID1133\nPID1137\nPID1165\nPID1167\nPID1170\nPID1171\nPID1173\nPID1176\nPID1177\nPID1179\nPID1192\nPID1199\nPID121\nPID1210\nPID1211\nPID1222\nPID1226\nPID1228\nPID1242\nPID1247\nPID1248\nPID1258\nPID1260\nPID1274\nPID1276\nPID1280\nPID1285\nPID1293\nPID1301\nPID1307\nPID1318\nPID1332\nPID1342\nPID1349\nPID1370\nPID1371\nPID1382\nPID1392\nPID1399\nPID1420\nPID1437\nPID1438\nPID1439\nPID1440\nPID1454\nPID1461\nPID1462\nPID1469\nPID1470\nPID1485\nPID1489\nPID1494\nPID1496\nPID1511\nPID1516\nPID1547\nPID1557\nPID1565\nPID1590\nPID1591\nPID1601\nPID1602\nPID1603\nPID1617\nPID1634\nPID1637\nPID1638\nPID1644\nPID1650\nPID1653\nPID1663\nPID1673\nPID1677\nPID1678\nPID1684\nPID1705\nPID1732\nPID1761\nPID1791\nPID1876\nPID1877\nPID1912\nPID1976\nPID1997\nPID2031\nPID2036\nPID2060\nPID2072\nPID2089\nPID2115\nPID2202\nPID2224\nPID2233\nPID229\nPID2304\nPID239\nPID2431\nPID263\nPID305\nPID436\nPID450\nPID512\nPID518\nPID528\nPID647\nPID674\nPID675\nPID74\nPID865\nPID884\nPID889\nPID894\nPID898\nPID901\nPID903\nPID909\nPID951\nPID952\nPID955\nPID957\nPID963\nPID970\nPID976\nPID982\nPID985\nPID988\nPID989\n\n\n\n\n7\n5\n5\n5\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n\n\n\n\n\n\nadjusted p values\n\n# correlation test and anova\npvalTab &lt;- lapply(batVec, function(fac){\n  print(fac)\n  sapply(colnames(pcRes$x), function(pc){\n    ifelse(fac == \"pelletSize\",\n           cor.test(pcTab[[pc]], pcTab$pelletSize, method = \"kendall\")$p.value,\n           kruskal.test(as.formula(paste0(pc, \"~\", fac)), pcTab)$p.value)\n    }) %&gt;% p.adjust(\"BH\")\n}) %&gt;% do.call(rbind, .)\n\n[1] \"pelletSize\"\n[1] \"sampleType\"\n[1] \"patID\"\n\nrownames(pvalTab) &lt;- batVec\n\n# extract significant pcs\nlogPTab &lt;- pvalTab %&gt;% as_tibble(rownames = \"Batch factor\") %&gt;%\n  pivot_longer(-`Batch factor`, names_to = \"PC\", values_to = \"adj.p-value\") %&gt;%\n  left_join(as_tibble(summary(pcRes)$importance[\"Proportion of Variance\", ] * 100, rownames = \"PC\"), by = c(\"PC\" = \"PC\")) %&gt;%\n  filter(`adj.p-value` &lt; 0.01) %&gt;%\n  separate(col = \"PC\", into = c(\"a\", \"PC\"), sep = \"PC\") %&gt;%\n  select(-a) %&gt;%\n  mutate(PC = factor(PC, levels = sort(as.numeric(unique(PC)))),\n         \"explained variance\" = paste0(PC, \" (\", value, \"%)\"), \n         \"-log(adj.p-value)\" = -log(`adj.p-value`))\n\n# plot\nlogPTab %&gt;%\n  ggplot(aes(x = PC, y = `-log(adj.p-value)`, fill = `Batch factor`, labels = `explained variance`)) +\n  geom_bar(stat = \"identity\") + \n  theme_bw() + \n  theme(axis.text.x = element_text(size = 8), \n        axis.text.y = element_text(size = 10),\n        plot.title = element_text(hjust = 0.5)) +\n  labs(title = bquote(\"Before removing batch: Extracting p-value &lt; 0.01\" ~ bold('without healthy samples'))) + \n  scale_x_discrete(labels = unique(arrange(logPTab, PC)$`explained variance`)) +\n  facet_wrap(~`Batch factor`, ncol = 1)\n\n\n\n\n\n\nbatch correction\n\ndesign0 &lt;- model.matrix(~diagSimple, data = pcTab)\nnoHthy_batch &lt;- removeBatchEffect(assay(seNoHthy.imput), \n                                  batch = pcTab$pelletSize, \n                                  batch2 = pcTab$sampleType, \n                                  design = design0)\n\n# perform PCA\npcRes_batch &lt;- prcomp(t(noHthy_batch), center = TRUE, scale. = TRUE)\n\npcTab_batch &lt;- pcRes_batch$x %&gt;% as_tibble(rownames = \"smpID\") %&gt;%\n  left_join(patTab) %&gt;% \n  mutate(sampleType = factor(sampleType), \n         patID = factor(patID))\n\nJoining with `by = join_by(smpID)`\n\n# correlation test and anova\npvalTab_batch &lt;- lapply(batVec, function(fac){\n  print(fac)\n  sapply(colnames(pcRes_batch$x), function(pc){\n    ifelse(fac == \"pelletSize\", \n           cor.test(pcTab_batch[[pc]], pcTab_batch$pelletSize, method = \"kendall\")$p.value,\n           kruskal.test(as.formula(paste0(pc, \"~\", fac)), pcTab_batch)$p.value)\n    }) %&gt;% p.adjust(\"BH\")\n}) %&gt;% do.call(rbind, .)\n\n[1] \"pelletSize\"\n[1] \"sampleType\"\n[1] \"patID\"\n\nrownames(pvalTab_batch) &lt;- batVec\n\n# extract significant pcs\nlogPTab_batch &lt;- pvalTab_batch %&gt;% as_tibble(rownames = \"Batch factor\") %&gt;%\n  pivot_longer(-`Batch factor`, names_to = \"PC\", values_to = \"adj.p-value\") %&gt;%\n  left_join(as_tibble(summary(pcRes_batch)$importance[\"Proportion of Variance\", ] * 100, rownames = \"PC\"), by = c(\"PC\" = \"PC\")) %&gt;%\n  filter(`adj.p-value` &lt; 0.01) %&gt;%\n  separate(col = \"PC\", into = c(\"a\", \"PC\"), sep = \"PC\") %&gt;%\n  select(-a) %&gt;%\n  mutate(PC = factor(PC, levels = sort(as.numeric(unique(PC)))),\n         \"explained variance\" = paste0(PC, \" (\", value, \"%)\"), \n         \"-log(adj.p-value)\" = -log(`adj.p-value`))\n\n# plot\nlogPTab_batch %&gt;%\n  ggplot(aes(x = PC, y = `-log(adj.p-value)`, fill = `Batch factor`, labels = `explained variance`)) +\n  geom_bar(stat = \"identity\") + \n  theme_bw() + \n  theme(axis.text.x = element_text(angle = 45, size = 8, vjust = 1, hjust = 1), \n        axis.text.y = element_text(size = 10),\n        plot.title = element_text(hjust = 0.5)) +\n  labs(title = bquote(\"After removing batch: Extracting p-value &lt; 0.01\" ~ bold('without healthy samples'))) + \n  scale_x_discrete(labels = unique(arrange(logPTab_batch, PC)$`explained variance`)) +\n  facet_wrap(~`Batch factor`, ncol = 1)\n\n\n\n\n\n\nboxplot of comparison\n\n# PC10: sampleType significant\nstp_p1 &lt;- pcTab %&gt;%\n  ggplot(aes(x = sampleType, y = PC10, fill = sampleType)) +\n  geom_boxplot() +\n  labs(title = paste0(\"sampleType: p-value is \",\n                      format(pvalTab[\"sampleType\", \"PC10\"], digits = 2),\n                      \"\\nbefore batch correction\")) + \n  theme(legend.position = \"none\", plot.title = element_text(hjust = 0.5))\nstp_p2 &lt;- pcTab_batch %&gt;%\n  ggplot(aes(x = sampleType, y = PC10, fill = sampleType)) +\n  geom_boxplot() +\n  labs(title = paste0(\"sampleType: p-value is \",\n                      format(pvalTab_batch[\"sampleType\", \"PC10\"], digits = 2),\n                      \"\\nafter batch correction\")) + \n  theme(legend.position = \"none\", plot.title = element_text(hjust = 0.5))\n\ncowplot::plot_grid(stp_p1, stp_p2)\n\n\n\n# PC1: pelletSize significant\npls_p1 &lt;- pcTab%&gt;%\n  ggplot(aes(x = pelletSize, y = PC1, fill = pelletSize)) +\n  geom_point() +\n  labs(title = paste0(\"pelletSize: p-value is \", \n                      format(pvalTab[\"pelletSize\", \"PC1\"], digits = 2),\n                      \"\\nbefore batch correction\")) +\n  theme(legend.position = \"none\", plot.title = element_text(hjust = 0.5))\npls_p2 &lt;- pcTab_batch %&gt;%\n  ggplot(aes(x = pelletSize, y = PC1, fill = pelletSize)) +\n  geom_point() +\n  labs(title = paste0(\"pelletSize: p-value is \", \n                      format(pvalTab_batch[\"pelletSize\", \"PC1\"], digits = 2),\n                      \"\\nafter batch correction\")) +\n  theme(legend.position = \"none\", plot.title = element_text(hjust = 0.5))\n\ncowplot::plot_grid(pls_p1, pls_p2)"
  },
  {
    "objectID": "Diann_QC.html#cll",
    "href": "Diann_QC.html#cll",
    "title": "Diann_QC",
    "section": "CLL",
    "text": "CLL\n\n# vsn and imputaion\nseCll &lt;- seDiann[, filter(patTab, diagSimple == \"CLL\")$smpID]\nseCll &lt;- seCll[rowSums(is.na(assay(seCll)))/ncol(seCll) &lt; 0.5, ]\nexprMat.vst &lt;- vsn::justvsn(assays(seCll)$count)\nseCll &lt;- SummarizedExperiment(assays = exprMat.vst, \n                              colData = colData(seCll), \n                              rowData = rowData(seCll))\nseCll.imput &lt;- DEP::impute(seCll, \"QRILC\")\n\nImputing along margin 2 (samples/columns).\n\n# pca\npcRes &lt;- prcomp(t(assay(seCll.imput)), center = TRUE, scale. = TRUE)\n\npcTab &lt;- pcRes$x %&gt;% as_tibble(rownames = \"smpID\") %&gt;%\n  left_join(patTab)\n\nJoining with `by = join_by(smpID)`\n\n# check and process batch factors first\n## sampleType, patID\nknitr::kable(sort(table(pcTab$sampleType), decreasing = TRUE))\n\n\n\n\nVar1\nFreq\n\n\n\n\nPB\n234\n\n\nBM aspirate\n16\n\n\n\n\nknitr::kable(t(sort(table(pcTab$patID), decreasing = TRUE)))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPID1564\nPID497\nPID935\nP0050\nP0314\nP0353\nP0777\nPID1191\nPID1457\nPID1691\nPID1913\nPID859\nPID934\nPID940\nP0508\nP0734\nPID1009\nPID1023\nPID1146\nPID1201\nPID1203\nPID1229\nPID1264\nPID1340\nPID1419\nPID1662\nPID1844\nPID2105\nP0641\nPID1027\nPID110\nPID1200\nPID1246\nPID1450\nPID1517\nPID1624\nPID1670\nPID1704\nPID1893\nPID2168\nPID279\nPID301\nPID883\nPID907\nPID1013\nPID1015\nPID1016\nPID1022\nPID1024\nPID1035\nPID1036\nPID1065\nPID1068\nPID1077\nPID1086\nPID1091\nPID1095\nPID1098\nPID1102\nPID1128\nPID1133\nPID1165\nPID1167\nPID1171\nPID1173\nPID1176\nPID1177\nPID1179\nPID1192\nPID1199\nPID121\nPID1210\nPID1211\nPID1222\nPID1226\nPID1228\nPID1242\nPID1247\nPID1248\nPID1260\nPID1274\nPID1276\nPID1280\nPID1285\nPID1293\nPID1301\nPID1307\nPID1318\nPID1332\nPID1342\nPID1349\nPID1382\nPID1392\nPID1399\nPID1437\nPID1438\nPID1439\nPID1440\nPID1454\nPID1461\nPID1462\nPID1469\nPID1489\nPID1494\nPID1496\nPID1511\nPID1547\nPID1561\nPID1565\nPID1590\nPID1591\nPID1601\nPID1602\nPID1617\nPID1634\nPID1637\nPID1638\nPID1644\nPID1650\nPID1673\nPID1678\nPID1694\nPID1705\nPID1761\nPID1791\nPID1876\nPID1877\nPID1976\nPID1997\nPID2031\nPID2036\nPID2060\nPID2072\nPID2089\nPID2115\nPID2202\nPID2233\nPID229\nPID2304\nPID239\nPID263\nPID305\nPID436\nPID512\nPID518\nPID528\nPID674\nPID675\nPID74\nPID884\nPID894\nPID898\nPID901\nPID909\nPID951\nPID952\nPID955\nPID957\nPID963\nPID970\nPID982\n\n\n\n\n5\n5\n5\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n\n\n\n\npcTab &lt;- pcTab %&gt;%\n  mutate(sampleType = factor(sampleType), \n         patID = factor(patID))\n\n\nadjusted p values\n\n# correlation test and anova\npvalTab &lt;- lapply(batVec, function(fac){\n  print(fac)\n  sapply(colnames(pcRes$x), function(pc){\n    ifelse(fac == \"pelletSize\",\n           cor.test(pcTab[[pc]], pcTab$pelletSize, method = \"kendall\")$p.value,\n           kruskal.test(as.formula(paste0(pc, \"~\", fac)), pcTab)$p.value)\n    }) %&gt;% p.adjust(\"BH\")\n}) %&gt;% do.call(rbind, .)\n\n[1] \"pelletSize\"\n[1] \"sampleType\"\n[1] \"patID\"\n\nrownames(pvalTab) &lt;- batVec\n\n# extract significant pcs\nlogPTab &lt;- pvalTab %&gt;% as_tibble(rownames = \"Batch factor\") %&gt;%\n  pivot_longer(-`Batch factor`, names_to = \"PC\", values_to = \"adj.p-value\") %&gt;%\n  left_join(as_tibble(summary(pcRes)$importance[\"Proportion of Variance\", ] * 100, rownames = \"PC\"), by = c(\"PC\" = \"PC\")) %&gt;%\n  filter(`adj.p-value` &lt; 0.01) %&gt;%\n  separate(col = \"PC\", into = c(\"a\", \"PC\"), sep = \"PC\") %&gt;%\n  select(-a) %&gt;%\n  mutate(PC = factor(PC, levels = sort(as.numeric(unique(PC)))),\n         \"explained variance\" = paste0(PC, \" (\", value, \"%)\"), \n         \"-log(adj.p-value)\" = -log(`adj.p-value`))\n\n# plot\nlogPTab %&gt;%\n  ggplot(aes(x = PC, y = `-log(adj.p-value)`, fill = `Batch factor`, labels = `explained variance`)) +\n  geom_bar(stat = \"identity\") + \n  theme_bw() + \n  theme(axis.text.x = element_text(size = 8), \n        axis.text.y = element_text(size = 10),\n        plot.title = element_text(hjust = 0.5)) +\n  labs(title = bquote(\"Before removing batch: Extracting p-value &lt; 0.01\" ~ bold('without healthy samples'))) + \n  scale_x_discrete(labels = unique(arrange(logPTab, PC)$`explained variance`)) +\n  facet_wrap(~`Batch factor`, ncol = 1)\n\n\n\n\n\n\nbatch correction (no design)\n\ncll_batch &lt;- removeBatchEffect(assay(seCll.imput), \n                               batch = pcTab$pelletSize, \n                               batch2 = pcTab$sampleType)\n\n# perform PCA\npcRes_batch &lt;- prcomp(t(cll_batch), center = TRUE, scale. = TRUE)\n\npcTab_batch &lt;- pcRes_batch$x %&gt;% as_tibble(rownames = \"smpID\") %&gt;%\n  left_join(patTab) %&gt;% \n  mutate(sampleType = factor(ifelse(sampleType %in% c(\"PB\", \"BM aspirate\"), sampleType, \"others\")), \n         patID = factor(patID))\n\nJoining with `by = join_by(smpID)`\n\n# correlation test and anova\npvalTab_batch &lt;- lapply(batVec, function(fac){\n  print(fac)\n  sapply(colnames(pcRes_batch$x), function(pc){\n    ifelse(fac == \"pelletSize\", \n           cor.test(pcTab_batch[[pc]], pcTab_batch$pelletSize, method = \"kendall\")$p.value,\n           kruskal.test(as.formula(paste0(pc, \"~\", fac)), pcTab_batch)$p.value)\n    }) %&gt;% p.adjust(\"BH\")\n}) %&gt;% do.call(rbind, .)\n\n[1] \"pelletSize\"\n[1] \"sampleType\"\n[1] \"patID\"\n\nrownames(pvalTab_batch) &lt;- batVec\n\n# extract significant pcs\nlogPTab_batch &lt;- pvalTab_batch %&gt;% as_tibble(rownames = \"Batch factor\") %&gt;%\n  pivot_longer(-`Batch factor`, names_to = \"PC\", values_to = \"adj.p-value\") %&gt;%\n  left_join(as_tibble(summary(pcRes_batch)$importance[\"Proportion of Variance\", ] * 100, rownames = \"PC\"), by = c(\"PC\" = \"PC\")) %&gt;%\n  filter(`adj.p-value` &lt; 0.01) %&gt;%\n  separate(col = \"PC\", into = c(\"a\", \"PC\"), sep = \"PC\") %&gt;%\n  select(-a) %&gt;%\n  mutate(PC = factor(PC, levels = sort(as.numeric(unique(PC)))),\n         \"explained variance\" = paste0(PC, \" (\", value, \"%)\"), \n         \"-log(adj.p-value)\" = -log(`adj.p-value`))\n\n# plot\nlogPTab_batch %&gt;%\n  ggplot(aes(x = PC, y = `-log(adj.p-value)`, fill = `Batch factor`, labels = `explained variance`)) +\n  geom_bar(stat = \"identity\") + \n  theme_bw() + \n  theme(axis.text.x = element_text(angle = 45, size = 8, vjust = 1, hjust = 1), \n        axis.text.y = element_text(size = 10),\n        plot.title = element_text(hjust = 0.5)) +\n  labs(title = bquote(\"After removing batch: Extracting p-value &lt; 0.01\" ~ bold('without healthy samples'))) + \n  scale_x_discrete(labels = unique(arrange(logPTab_batch, PC)$`explained variance`)) +\n  facet_wrap(~`Batch factor`, ncol = 1)\n\n\n\n\n\n\nboxplot of comparison\n\n# PC1: sampleType significant\nstp_p1 &lt;- pcTab %&gt;%\n  ggplot(aes(x = sampleType, y = PC1, fill = sampleType)) +\n  geom_boxplot() +\n  labs(title = paste0(\"sampleType: p-value is \", format(pvalTab[\"sampleType\", \"PC1\"], digits = 2),\n                      \"\\nbefore batch correction\")) + \n  theme(legend.position = \"none\", plot.title = element_text(hjust = 0.5))\nstp_p2 &lt;- pcTab_batch %&gt;%\n  ggplot(aes(x = sampleType, y = PC1, fill = sampleType)) +\n  geom_boxplot() +\n  labs(title = paste0(\"sampleType: p-value is \", format(pvalTab_batch[\"sampleType\", \"PC1\"], digits = 2),\n                      \"\\nafter batch correction\")) + \n  theme(legend.position = \"none\", plot.title = element_text(hjust = 0.5))\n\ncowplot::plot_grid(stp_p1, stp_p2)\n\n\n\n# PC1: pelletSize significant\npls_p1 &lt;- pcTab %&gt;%\n  ggplot(aes(x = pelletSize, y = PC1)) +\n  geom_point() +\n  labs(title = paste0(\"pelletSize: p-value is \", \n                      format(pvalTab[\"pelletSize\", \"PC1\"], digits = 2),\n                      \"\\nbefore batch correction\")) + \n  theme(legend.position = \"none\", plot.title = element_text(hjust = 0.5))\npls_p2 &lt;- pcTab_batch %&gt;%\n  ggplot(aes(x = pelletSize, y = PC1)) +\n  geom_point() +\n  labs(title = paste0(\"pelletSize: p-value is \", \n                      format(pvalTab_batch[\"pelletSize\", \"PC1\"], digits = 2),\n                      \"\\nafter batch correction\")) + \n  theme(legend.position = \"none\", plot.title = element_text(hjust = 0.5))\n\ncowplot::plot_grid(pls_p1, pls_p2)"
  },
  {
    "objectID": "Spec_QC.html#all-samples",
    "href": "Spec_QC.html#all-samples",
    "title": "Spectronaut Quality Control",
    "section": "All samples",
    "text": "All samples\n\n# perform PCA\npcRes &lt;- prcomp(t(assays(seAll)$qrilc), center = TRUE, scale. = TRUE)\n\npcTab &lt;- pcRes$x %&gt;% as_tibble(rownames = \"smpID\") %&gt;%\n  left_join(patTab) \n\n# check and process batch factors first\n## pellet size, sampleType, patID, set\npcTab &lt;- mutate(pcTab, pelSimple = factor(case_when(\n  pelletSize &lt;= 0.1 ~ 0.1,\n  pelletSize &lt;= 0.2 & pelletSize &gt; 0.1 ~ 0.2, \n  pelletSize &lt;= 0.3 & pelletSize &gt; 0.2 ~ 0.3, \n  pelletSize &lt;= 0.4 & pelletSize &gt; 0.3 ~ 0.4,\n  pelletSize &lt;= 0.5 & pelletSize &gt; 0.4 ~ 0.5)), \n  sampleType = factor(sampleType), \n  patID = factor(patID), \n  set = factor(set))\n\npelNum &lt;- sort(table(pcTab$pelSimple), decreasing = TRUE)\nknitr::kable(pelNum)\n\n\n\n\nVar1\nFreq\n\n\n\n\n0.5\n325\n\n\n0.1\n50\n\n\n0.2\n10\n\n\n0.3\n8\n\n\n0.4\n5\n\n\n\n\nstpNum &lt;- sort(table(pcTab$sampleType), decreasing = TRUE)\nknitr::kable(stpNum)\n\n\n\n\nVar1\nFreq\n\n\n\n\nPB\n355\n\n\nBM aspirate\n28\n\n\nSpleen\n13\n\n\nPleural effusion\n1\n\n\nSpleen biopsy\n1\n\n\n\n\npatNum &lt;- sort(table(pcTab$patID), decreasing = TRUE)\nknitr::kable(t(patNum))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPID1712\nPID1564\nPID497\nPID935\nDonor 1205\nDonor 171590\nDonor 171779\nDonor 9200\nP0050\nP0314\nP0353\nP0777\nPID1191\nPID1457\nPID1691\nPID1913\nPID859\nPID934\nPID940\nDonor 171944\nDonor 2204\nDonor 3208\nDonor 4208\nDonor 9209\nP0508\nP0734\nPID1009\nPID1023\nPID1146\nPID1201\nPID1203\nPID1229\nPID1264\nPID1340\nPID1418\nPID1419\nPID1662\nPID1844\nPID2105\nDonor 171532\nDonor 3206\nP0641\nP0782\nP1151\nPID1014\nPID1027\nPID110\nPID1109\nPID1200\nPID1246\nPID1344\nPID1350\nPID1359\nPID1450\nPID1456\nPID1517\nPID1561\nPID1579\nPID1624\nPID1670\nPID1694\nPID1704\nPID1893\nPID1982\nPID2168\nPID279\nPID301\nPID883\nPID907\nPID961\nP0034\nP0057\nP0350\nP0361\nP0435\nP0444\nP0453\nP0511\nP0520\nP0527\nP0534\nP0535\nP0573\nP0584\nP0599\nP0680\nP0682\nP0683\nP0709\nP0710\nP0739\nP0744\nP0758\nP0761\nP0773\nP0774\nP0785\nP0819\nP0825\nP0892\nP0994\nP1001\nP1006\nP1029\nP1043\nP1057\nP1060\nP1063\nP1067\nP1137\nP1154\nP1225\nP1295\nPID1013\nPID1015\nPID1016\nPID1022\nPID1024\nPID1035\nPID1036\nPID1039\nPID1045\nPID1046\nPID1065\nPID1068\nPID1077\nPID1081\nPID1086\nPID1091\nPID1092\nPID1095\nPID1098\nPID1102\nPID1113\nPID1122\nPID1128\nPID1133\nPID1137\nPID1165\nPID1167\nPID1170\nPID1171\nPID1173\nPID1176\nPID1177\nPID1179\nPID1192\nPID1199\nPID121\nPID1210\nPID1211\nPID1222\nPID1226\nPID1228\nPID1242\nPID1247\nPID1248\nPID1258\nPID1260\nPID1274\nPID1276\nPID1280\nPID1285\nPID1293\nPID1301\nPID1307\nPID1318\nPID1332\nPID1342\nPID1349\nPID1370\nPID1371\nPID1382\nPID1399\nPID1420\nPID1437\nPID1438\nPID1439\nPID1440\nPID1454\nPID1461\nPID1462\nPID1469\nPID1470\nPID1485\nPID1489\nPID1494\nPID1496\nPID1511\nPID1516\nPID1547\nPID1557\nPID1565\nPID1590\nPID1591\nPID1601\nPID1602\nPID1603\nPID1617\nPID1634\nPID1637\nPID1638\nPID1644\nPID1650\nPID1653\nPID1663\nPID1673\nPID1677\nPID1678\nPID1684\nPID1705\nPID1732\nPID1761\nPID1784\nPID1791\nPID1876\nPID1877\nPID1912\nPID1976\nPID1997\nPID2031\nPID2036\nPID2060\nPID2072\nPID2089\nPID2115\nPID2202\nPID2224\nPID2233\nPID229\nPID2304\nPID239\nPID2431\nPID263\nPID305\nPID436\nPID450\nPID512\nPID518\nPID528\nPID647\nPID674\nPID675\nPID74\nPID770\nPID865\nPID884\nPID889\nPID894\nPID898\nPID901\nPID903\nPID909\nPID951\nPID952\nPID955\nPID957\nPID963\nPID970\nPID976\nPID982\nPID985\nPID988\nPID989\n\n\n\n\n7\n5\n5\n5\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n\n\n\n\nsetNum &lt;- sort(table(pcTab$set), decreasing = TRUE)\nknitr::kable(setNum)\n\n\n\n\nVar1\nFreq\n\n\n\n\nCLL\n113\n\n\nBTKi\n111\n\n\nLymphoma/HCL\n86\n\n\nLymphoma/HCL, BTKi\n27\n\n\nCLL/BTKi\n23\n\n\nTest, BTKi\n3\n\n\n\n\n\n\np values\n\n# anova\nbatList &lt;- list(\"pelSimple\" = pelNum, \"sampleType\" = stpNum, \"patID\" = patNum, \"set\" = setNum)\npvalTab &lt;- lapply(names(batList), function(fac){\n  print(fac)\n  data &lt;- pcTab[pcTab[[fac]] %in% names(batList[[fac]][batList[[fac]] &gt; 1]), ]\n  sapply(colnames(pcRes$x), function(pc){\n    res_aov &lt;- aov(as.formula(paste0(pc, \"~\", fac)), data = data) \n    summary(res_aov)[[1]][[\"Pr(&gt;F)\"]][1]\n    })\n}) %&gt;% do.call(rbind, .)\n\n[1] \"pelSimple\"\n[1] \"sampleType\"\n[1] \"patID\"\n[1] \"set\"\n\nrownames(pvalTab) &lt;- names(batList)\n\n# extract significant pcs\nlogPTab &lt;- pvalTab %&gt;% as_tibble(rownames = \"Batch factor\") %&gt;%\n  pivot_longer(-`Batch factor`, names_to = \"PC\", values_to = \"P-value\") %&gt;%\n  separate(col = \"PC\", into = c(\"a\", \"PC\"), sep = \"PC\") %&gt;%\n  select(-a) %&gt;%\n  group_by(`Batch factor`) %&gt;%\n  mutate(PC = factor(PC, levels = PC)) %&gt;%\n  ungroup() %&gt;%\n  filter(`P-value` &lt; 0.01) %&gt;%\n  mutate(\"-log(p-value)\" = -log(`P-value`)) \n\n# plot\nlogPTab %&gt;%\n  ggplot(aes(x = PC, y = `-log(p-value)`, fill = `Batch factor`)) +\n  geom_bar(stat = \"identity\") + \n  theme_bw() + \n  theme(axis.text.x = element_text(angle = 90, size = 8), \n        axis.text.y = element_text(size = 10),\n        plot.title = element_text(hjust = 0.5)) +\n  labs(title = bquote(\"Extracting p-value &lt; 0.01 with \" ~ bold('All samples')))\n\n\n\n\n\n\nbatch correction\n\ndesign0 &lt;- model.matrix(~diagSimple, data = pcTab)\nall_batch &lt;- removeBatchEffect(assays(seAll)$qrilc, \n                               batch = pcTab$pelSimple, \n                               batch2 = pcTab$sampleType, \n                               design = design0)\n\n# perform PCA\npcRes_batch &lt;- prcomp(t(all_batch), center = TRUE, scale. = TRUE)\n\npcTab_batch &lt;- pcRes_batch$x %&gt;% as_tibble(rownames = \"smpID\") %&gt;%\n  left_join(patTab)\n\nJoining with `by = join_by(smpID)`\n\npcTab_batch &lt;- mutate(pcTab_batch, pelSimple = factor(case_when(\n  pelletSize &lt;= 0.1 ~ 0.1,\n  pelletSize &lt;= 0.2 & pelletSize &gt; 0.1 ~ 0.2, \n  pelletSize &lt;= 0.3 & pelletSize &gt; 0.2 ~ 0.3, \n  pelletSize &lt;= 0.4 & pelletSize &gt; 0.3 ~ 0.4,\n  pelletSize &lt;= 0.5 & pelletSize &gt; 0.4 ~ 0.5)), \n  sampleType = factor(sampleType), \n  patID = factor(patID), \n  set = factor(set))\n\n# anova\npvalTab_batch &lt;- lapply(names(batList), function(fac){\n  print(fac)\n  data &lt;- pcTab_batch[pcTab_batch[[fac]] %in% names(batList[[fac]][batList[[fac]] &gt; 1]), ]\n  sapply(colnames(pcRes_batch$x), function(pc){\n    res_aov &lt;- aov(as.formula(paste0(pc, \"~\", fac)), data = data) \n    summary(res_aov)[[1]][[\"Pr(&gt;F)\"]][1]\n    })\n}) %&gt;% do.call(rbind, .)\n\n[1] \"pelSimple\"\n[1] \"sampleType\"\n[1] \"patID\"\n[1] \"set\"\n\nrownames(pvalTab_batch) &lt;- names(batList)\n\n\n\nboxplot of comparison\n\n# PC1: sampleType significant\npcTab[pcTab$sampleType %in% names(stpNum[stpNum &gt; 1]), ] %&gt;%\n  ggplot(aes(x = sampleType, y = PC1, fill = sampleType)) +\n  geom_boxplot() +\n  labs(title = paste0(\"sampleType: p-value is \", format(pvalTab[\"sampleType\", \"PC1\"], digits = 2), \n                      \" before batch correction\"))\n\n\n\npcTab_batch[pcTab_batch$sampleType %in% names(stpNum[stpNum &gt; 1]), ] %&gt;%\n  ggplot(aes(x = sampleType, y = PC1, fill = sampleType)) +\n  geom_boxplot() +\n  labs(title = paste0(\"sampleType: p-value is \", format(pvalTab_batch[\"sampleType\", \"PC1\"], digits = 2), \n                      \" after batch correction\"))\n\n\n\n# PC6: pelletSize significant\npcTab[pcTab$pelSimple %in% names(pelNum[pelNum &gt; 1]), ] %&gt;%\n  ggplot(aes(x = pelSimple, y = PC6, fill = pelSimple)) +\n  geom_boxplot()  +\n  labs(title = paste0(\"pelletSize: p-value is \", format(pvalTab[\"pelSimple\", \"PC6\"], digits = 2),\n                      \" before batch correction\"))\n\n\n\npcTab_batch[pcTab_batch$pelSimple %in% names(pelNum[pelNum &gt; 1]), ] %&gt;%\n  ggplot(aes(x = pelSimple, y = PC6, fill = pelSimple)) +\n  geom_boxplot()  +\n  labs(title = paste0(\"pelletSize: p-value is \", format(pvalTab_batch[\"pelSimple\", \"PC6\"], digits = 2),\n                      \" after batch correction\"))"
  },
  {
    "objectID": "Spec_QC.html#healthy-samples",
    "href": "Spec_QC.html#healthy-samples",
    "title": "Spectronaut Quality Control",
    "section": "Healthy samples",
    "text": "Healthy samples\n\nbatVec &lt;- c(\"pelletSize\", \"sampleType\", \"patID\")\n# vsn and imputaion\nseHthy &lt;- seSpec[, filter(patTab, diagSimple == \"healthy\")$smpID]\nseHthy &lt;- seHthy[rowSums(is.na(assay(seHthy)))/ncol(seHthy) &lt; 0.5, ]\nexprMat.vst &lt;- vsn::justvsn(assays(seHthy)$count)\nseHthy &lt;- SummarizedExperiment(assays = exprMat.vst, \n                              colData = colData(seHthy), \n                              rowData = rowData(seHthy))\nseHthy.imput &lt;- DEP::impute(seHthy, \"QRILC\")\n\nImputing along margin 2 (samples/columns).\n\n# pca\npcRes &lt;- prcomp(t(assay(seHthy.imput)), center = TRUE, scale. = TRUE)\n\npcTab &lt;- pcRes$x %&gt;% as_tibble(rownames = \"smpID\") %&gt;%\n  left_join(patTab) %&gt;% \n  mutate(sampleType = factor(sampleType), patID = factor(patID))\n\nJoining with `by = join_by(smpID)`\n\n# check and process batch factors first\n## sampleType, patID\nknitr::kable(sort(table(pcTab$sampleType), decreasing = TRUE))\n\n\n\n\nVar1\nFreq\n\n\n\n\nPB\n22\n\n\nSpleen\n13\n\n\n\n\nknitr::kable(t(sort(table(pcTab$patID), decreasing = TRUE)))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDonor 1205\nDonor 171590\nDonor 171779\nDonor 9200\nDonor 171944\nDonor 2204\nDonor 3208\nDonor 4208\nDonor 9209\nDonor 171532\nDonor 3206\n\n\n\n\n4\n4\n4\n4\n3\n3\n3\n3\n3\n2\n2\n\n\n\n\n\n\nadjusted p values\n\n# correlation test and anova\npvalTab &lt;- lapply(batVec, function(fac){\n  print(fac)\n  sapply(colnames(pcRes$x), function(pc){\n    ifelse(fac == \"pelletSize\",\n           cor.test(pcTab[[pc]], pcTab$pelletSize, method = \"kendall\", exact = FALSE)$p.value,\n           kruskal.test(as.formula(paste0(pc, \"~\", fac)), pcTab)$p.value)\n    }) %&gt;% p.adjust(\"BH\")\n}) %&gt;% do.call(rbind, .)\n\n[1] \"pelletSize\"\n[1] \"sampleType\"\n[1] \"patID\"\n\nrownames(pvalTab) &lt;- batVec\n\n# extract significant pcs\nlogPTab &lt;- pvalTab %&gt;% as_tibble(rownames = \"Batch factor\") %&gt;%\n  pivot_longer(-`Batch factor`, names_to = \"PC\", values_to = \"adj.p-value\") %&gt;%\n  left_join(as_tibble(summary(pcRes)$importance[\"Proportion of Variance\", ] * 100, rownames = \"PC\"), by = c(\"PC\" = \"PC\")) %&gt;%\n  filter(`adj.p-value` &lt; 0.01) %&gt;%\n  separate(col = \"PC\", into = c(\"a\", \"PC\"), sep = \"PC\") %&gt;%\n  select(-a) %&gt;%\n  mutate(PC = factor(PC, levels = sort(as.numeric(unique(PC)))),\n         \"explained variance\" = paste0(PC, \" (\", value, \"%)\"), \n         \"-log(adj.p-value)\" = -log(`adj.p-value`))\n\n\n\nboxplot of comparison\n\n# PC1: pelletSize significant\npcTab%&gt;%\n  ggplot(aes(x = pelletSize, y = PC1)) +\n  geom_point() +\n  labs(title = paste0(\"pelletSize: p-value is \", \n                      format(pvalTab[\"pelletSize\", \"PC1\"], digits = 2)))\n\n\n\n# PC1: sampleType significant\npcTab %&gt;%\n  ggplot(aes(x = sampleType, y = PC1, fill = sampleType)) +\n  geom_boxplot() +\n  labs(title = paste0(\"sampleType: p-value is \", \n                      format(pvalTab[\"sampleType\", \"PC1\"], digits = 2)))"
  },
  {
    "objectID": "Spec_QC.html#without-healthy-samples",
    "href": "Spec_QC.html#without-healthy-samples",
    "title": "Spectronaut Quality Control",
    "section": "Without healthy samples",
    "text": "Without healthy samples\n\n# vsn and imputaion\nseNoHthy &lt;- seSpec[, filter(patTab, diagSimple != \"healthy\" & !(sampleType %in% c(\"Pleural effusion\", \"Spleen biopsy\")))$smpID]\nseNoHthy &lt;- seNoHthy[, - which(colnames(seNoHthy) %in% \"S454710\")]\nseNoHthy &lt;- seNoHthy[rowSums(is.na(assay(seNoHthy)))/ncol(seNoHthy) &lt; 0.5, ]\nexprMat.vst &lt;- vsn::justvsn(assays(seNoHthy)$count)\nseNoHthy &lt;- SummarizedExperiment(assays = exprMat.vst,\n                                 colData = colData(seNoHthy), \n                                 rowData = rowData(seNoHthy))\nseNoHthy.imput &lt;- DEP::impute(seNoHthy, \"QRILC\")\n\nImputing along margin 2 (samples/columns).\n\n# pca\npcRes &lt;- prcomp(t(assay(seNoHthy.imput)), center = TRUE, scale. = TRUE)\n\npcTab &lt;- pcRes$x %&gt;% as_tibble(rownames = \"smpID\") %&gt;%\n  left_join(patTab) %&gt;%\n  mutate(sampleType = factor(sampleType), \n         patID = factor(patID))\n\nJoining with `by = join_by(smpID)`\n\n# check and process batch factors first\n## sampleType, patID\nknitr::kable(sort(table(pcTab$sampleType), decreasing = TRUE))\n\n\n\n\nVar1\nFreq\n\n\n\n\nPB\n333\n\n\nBM aspirate\n28\n\n\n\n\nknitr::kable(t(sort(table(pcTab$patID), decreasing = TRUE)))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPID1712\nPID1564\nPID497\nPID935\nP0050\nP0314\nP0353\nP0777\nPID1191\nPID1457\nPID1691\nPID1913\nPID859\nPID934\nPID940\nP0508\nP0734\nPID1009\nPID1023\nPID1146\nPID1201\nPID1203\nPID1229\nPID1264\nPID1340\nPID1418\nPID1419\nPID1662\nPID1844\nPID2105\nP0641\nP0782\nP1151\nPID1014\nPID1027\nPID110\nPID1109\nPID1200\nPID1246\nPID1344\nPID1350\nPID1359\nPID1450\nPID1456\nPID1517\nPID1561\nPID1579\nPID1624\nPID1670\nPID1694\nPID1704\nPID1893\nPID1982\nPID2168\nPID279\nPID301\nPID883\nPID907\nPID961\nP0034\nP0057\nP0350\nP0361\nP0435\nP0444\nP0453\nP0511\nP0520\nP0527\nP0534\nP0535\nP0573\nP0584\nP0599\nP0680\nP0682\nP0683\nP0709\nP0710\nP0739\nP0744\nP0758\nP0761\nP0773\nP0774\nP0785\nP0819\nP0825\nP0892\nP0994\nP1001\nP1006\nP1029\nP1043\nP1057\nP1060\nP1063\nP1067\nP1137\nP1154\nP1225\nP1295\nPID1013\nPID1015\nPID1016\nPID1022\nPID1024\nPID1035\nPID1036\nPID1039\nPID1045\nPID1046\nPID1065\nPID1068\nPID1077\nPID1081\nPID1086\nPID1091\nPID1092\nPID1095\nPID1098\nPID1102\nPID1113\nPID1122\nPID1128\nPID1133\nPID1137\nPID1165\nPID1167\nPID1170\nPID1171\nPID1173\nPID1176\nPID1177\nPID1179\nPID1192\nPID1199\nPID121\nPID1210\nPID1211\nPID1222\nPID1226\nPID1228\nPID1242\nPID1247\nPID1248\nPID1258\nPID1260\nPID1274\nPID1276\nPID1280\nPID1285\nPID1293\nPID1301\nPID1307\nPID1318\nPID1332\nPID1342\nPID1349\nPID1370\nPID1371\nPID1382\nPID1399\nPID1420\nPID1437\nPID1438\nPID1439\nPID1440\nPID1454\nPID1461\nPID1462\nPID1469\nPID1470\nPID1485\nPID1489\nPID1494\nPID1496\nPID1511\nPID1516\nPID1547\nPID1557\nPID1565\nPID1590\nPID1591\nPID1601\nPID1602\nPID1603\nPID1617\nPID1634\nPID1637\nPID1638\nPID1644\nPID1650\nPID1653\nPID1663\nPID1673\nPID1677\nPID1678\nPID1684\nPID1705\nPID1732\nPID1761\nPID1791\nPID1876\nPID1877\nPID1912\nPID1976\nPID1997\nPID2031\nPID2036\nPID2060\nPID2072\nPID2089\nPID2115\nPID2202\nPID2224\nPID2233\nPID229\nPID2304\nPID239\nPID2431\nPID263\nPID305\nPID436\nPID450\nPID512\nPID518\nPID528\nPID647\nPID674\nPID675\nPID74\nPID865\nPID884\nPID889\nPID894\nPID898\nPID901\nPID903\nPID909\nPID951\nPID952\nPID955\nPID957\nPID963\nPID970\nPID976\nPID982\nPID985\nPID988\nPID989\n\n\n\n\n7\n5\n5\n5\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n\n\n\n\n\n\nadjusted p values\n\n# correlation test and anova\npvalTab &lt;- lapply(batVec, function(fac){\n  print(fac)\n  sapply(colnames(pcRes$x), function(pc){\n    ifelse(fac == \"pelletSize\",\n           cor.test(pcTab[[pc]], pcTab$pelletSize, method = \"kendall\")$p.value,\n           kruskal.test(as.formula(paste0(pc, \"~\", fac)), pcTab)$p.value)\n    }) %&gt;% p.adjust(\"BH\")\n}) %&gt;% do.call(rbind, .)\n\n[1] \"pelletSize\"\n[1] \"sampleType\"\n[1] \"patID\"\n\nrownames(pvalTab) &lt;- batVec\n\n# extract significant pcs\nlogPTab &lt;- pvalTab %&gt;% as_tibble(rownames = \"Batch factor\") %&gt;%\n  pivot_longer(-`Batch factor`, names_to = \"PC\", values_to = \"adj.p-value\") %&gt;%\n  left_join(as_tibble(summary(pcRes)$importance[\"Proportion of Variance\", ] * 100, rownames = \"PC\"), by = c(\"PC\" = \"PC\")) %&gt;%\n  filter(`adj.p-value` &lt; 0.01) %&gt;%\n  separate(col = \"PC\", into = c(\"a\", \"PC\"), sep = \"PC\") %&gt;%\n  select(-a) %&gt;%\n  mutate(PC = factor(PC, levels = sort(as.numeric(unique(PC)))),\n         \"explained variance\" = paste0(PC, \" (\", value, \"%)\"), \n         \"-log(adj.p-value)\" = -log(`adj.p-value`))\n\n# plot\nlogPTab %&gt;%\n  ggplot(aes(x = PC, y = `-log(adj.p-value)`, fill = `Batch factor`, labels = `explained variance`)) +\n  geom_bar(stat = \"identity\") + \n  theme_bw() + \n  theme(axis.text.x = element_text(size = 8), \n        axis.text.y = element_text(size = 10),\n        plot.title = element_text(hjust = 0.5)) +\n  labs(title = bquote(\"Before removing batch: Extracting p-value &lt; 0.01\" ~ bold('without healthy samples'))) + \n  scale_x_discrete(labels = unique(arrange(logPTab, PC)$`explained variance`)) +\n  facet_wrap(~`Batch factor`, ncol = 1)\n\n\n\n\n\n\nbatch correction\n\ndesign0 &lt;- model.matrix(~diagSimple, data = pcTab)\nnoHthy_batch &lt;- removeBatchEffect(assay(seNoHthy.imput), \n                                  batch = pcTab$pelletSize, \n                                  batch2 = pcTab$sampleType, \n                                  design = design0)\n\n# perform PCA\npcRes_batch &lt;- prcomp(t(noHthy_batch), center = TRUE, scale. = TRUE)\n\npcTab_batch &lt;- pcRes_batch$x %&gt;% as_tibble(rownames = \"smpID\") %&gt;%\n  left_join(patTab) %&gt;% \n  mutate(sampleType = factor(sampleType), \n         patID = factor(patID))\n\nJoining with `by = join_by(smpID)`\n\n# correlation test and anova\npvalTab_batch &lt;- lapply(batVec, function(fac){\n  print(fac)\n  sapply(colnames(pcRes_batch$x), function(pc){\n    ifelse(fac == \"pelletSize\", \n           cor.test(pcTab_batch[[pc]], pcTab_batch$pelletSize, method = \"kendall\")$p.value,\n           kruskal.test(as.formula(paste0(pc, \"~\", fac)), pcTab_batch)$p.value)\n    }) %&gt;% p.adjust(\"BH\")\n}) %&gt;% do.call(rbind, .)\n\n[1] \"pelletSize\"\n[1] \"sampleType\"\n[1] \"patID\"\n\nrownames(pvalTab_batch) &lt;- batVec\n\n# extract significant pcs\nlogPTab_batch &lt;- pvalTab_batch %&gt;% as_tibble(rownames = \"Batch factor\") %&gt;%\n  pivot_longer(-`Batch factor`, names_to = \"PC\", values_to = \"adj.p-value\") %&gt;%\n  left_join(as_tibble(summary(pcRes_batch)$importance[\"Proportion of Variance\", ] * 100, rownames = \"PC\"), by = c(\"PC\" = \"PC\")) %&gt;%\n  filter(`adj.p-value` &lt; 0.01) %&gt;%\n  separate(col = \"PC\", into = c(\"a\", \"PC\"), sep = \"PC\") %&gt;%\n  select(-a) %&gt;%\n  mutate(PC = factor(PC, levels = sort(as.numeric(unique(PC)))),\n         \"explained variance\" = paste0(PC, \" (\", value, \"%)\"), \n         \"-log(adj.p-value)\" = -log(`adj.p-value`))\n\n# plot\nlogPTab_batch %&gt;%\n  ggplot(aes(x = PC, y = `-log(adj.p-value)`, fill = `Batch factor`, labels = `explained variance`)) +\n  geom_bar(stat = \"identity\") + \n  theme_bw() + \n  theme(axis.text.x = element_text(angle = 45, size = 8, vjust = 1, hjust = 1), \n        axis.text.y = element_text(size = 10),\n        plot.title = element_text(hjust = 0.5)) +\n  labs(title = bquote(\"After removing batch: Extracting p-value &lt; 0.01\" ~ bold('without healthy samples'))) + \n  scale_x_discrete(labels = unique(arrange(logPTab_batch, PC)$`explained variance`)) +\n  facet_wrap(~`Batch factor`, ncol = 1)\n\n\n\n\n\n\nboxplot of comparison\n\n# PC8: sampleType significant\nstp_p1 &lt;- pcTab %&gt;%\n  ggplot(aes(x = sampleType, y = PC8, fill = sampleType)) +\n  geom_boxplot() +\n  labs(title = paste0(\"sampleType: p-value is \",\n                      format(pvalTab[\"sampleType\", \"PC8\"], digits = 2),\n                      \"\\nbefore batch correction\")) + \n  theme(legend.position = \"none\", plot.title = element_text(hjust = 0.5))\nstp_p2 &lt;- pcTab_batch %&gt;%\n  ggplot(aes(x = sampleType, y = PC8, fill = sampleType)) +\n  geom_boxplot() +\n  labs(title = paste0(\"sampleType: p-value is \",\n                      format(pvalTab_batch[\"sampleType\", \"PC8\"], digits = 2),\n                      \"\\nafter batch correction\")) + \n  theme(legend.position = \"none\", plot.title = element_text(hjust = 0.5))\n\ncowplot::plot_grid(stp_p1, stp_p2)\n\n\n\n# PC1: pelletSize significant\npls_p1 &lt;- pcTab%&gt;%\n  ggplot(aes(x = pelletSize, y = PC1, fill = pelletSize)) +\n  geom_point() +\n  labs(title = paste0(\"pelletSize: p-value is \", \n                      format(pvalTab[\"pelletSize\", \"PC1\"], digits = 2),\n                      \"\\nbefore batch correction\")) +\n  theme(legend.position = \"none\", plot.title = element_text(hjust = 0.5))\npls_p2 &lt;- pcTab_batch %&gt;%\n  ggplot(aes(x = pelletSize, y = PC1, fill = pelletSize)) +\n  geom_point() +\n  labs(title = paste0(\"pelletSize: p-value is \", \n                      format(pvalTab_batch[\"pelletSize\", \"PC1\"], digits = 2),\n                      \"\\nafter batch correction\")) +\n  theme(legend.position = \"none\", plot.title = element_text(hjust = 0.5))\n\ncowplot::plot_grid(pls_p1, pls_p2)"
  },
  {
    "objectID": "Spec_QC.html#cll",
    "href": "Spec_QC.html#cll",
    "title": "Spectronaut Quality Control",
    "section": "CLL",
    "text": "CLL\n\n# vsn and imputaion\nseCll &lt;- seSpec[, filter(patTab, diagSimple == \"CLL\")$smpID]\nseCll &lt;- seCll[, - which(colnames(seCll) %in% \"S454710\")]\nseCll &lt;- seCll[rowSums(is.na(assay(seCll)))/ncol(seCll) &lt; 0.5, ]\nexprMat.vst &lt;- vsn::justvsn(assays(seCll)$count)\nseCll &lt;- SummarizedExperiment(assays = exprMat.vst, \n                              colData = colData(seCll), \n                              rowData = rowData(seCll))\nseCll.imput &lt;- DEP::impute(seCll, \"QRILC\")\n\nImputing along margin 2 (samples/columns).\n\n# pca\npcRes &lt;- prcomp(t(assay(seCll.imput)), center = TRUE, scale. = TRUE)\n\npcTab &lt;- pcRes$x %&gt;% as_tibble(rownames = \"smpID\") %&gt;%\n  left_join(patTab)\n\nJoining with `by = join_by(smpID)`\n\n# check and process batch factors first\n## sampleType, patID\nknitr::kable(sort(table(pcTab$sampleType), decreasing = TRUE))\n\n\n\n\nVar1\nFreq\n\n\n\n\nPB\n233\n\n\nBM aspirate\n16\n\n\n\n\nknitr::kable(t(sort(table(pcTab$patID), decreasing = TRUE)))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPID1564\nPID497\nPID935\nP0050\nP0314\nP0353\nP0777\nPID1191\nPID1457\nPID1691\nPID1913\nPID859\nPID934\nPID940\nP0508\nP0734\nPID1009\nPID1023\nPID1146\nPID1201\nPID1203\nPID1229\nPID1264\nPID1340\nPID1419\nPID1662\nPID1844\nPID2105\nP0641\nPID1027\nPID110\nPID1200\nPID1246\nPID1450\nPID1517\nPID1624\nPID1670\nPID1704\nPID1893\nPID2168\nPID279\nPID301\nPID883\nPID907\nPID1013\nPID1015\nPID1016\nPID1022\nPID1024\nPID1035\nPID1036\nPID1065\nPID1068\nPID1077\nPID1086\nPID1091\nPID1095\nPID1098\nPID1102\nPID1128\nPID1133\nPID1165\nPID1167\nPID1171\nPID1173\nPID1176\nPID1177\nPID1179\nPID1192\nPID1199\nPID121\nPID1210\nPID1211\nPID1222\nPID1226\nPID1228\nPID1242\nPID1247\nPID1248\nPID1260\nPID1274\nPID1276\nPID1280\nPID1285\nPID1293\nPID1301\nPID1307\nPID1318\nPID1332\nPID1342\nPID1349\nPID1382\nPID1399\nPID1437\nPID1438\nPID1439\nPID1440\nPID1454\nPID1461\nPID1462\nPID1469\nPID1489\nPID1494\nPID1496\nPID1511\nPID1547\nPID1561\nPID1565\nPID1590\nPID1591\nPID1601\nPID1602\nPID1617\nPID1634\nPID1637\nPID1638\nPID1644\nPID1650\nPID1673\nPID1678\nPID1694\nPID1705\nPID1761\nPID1791\nPID1876\nPID1877\nPID1976\nPID1997\nPID2031\nPID2036\nPID2060\nPID2072\nPID2089\nPID2115\nPID2202\nPID2233\nPID229\nPID2304\nPID239\nPID263\nPID305\nPID436\nPID512\nPID518\nPID528\nPID674\nPID675\nPID74\nPID884\nPID894\nPID898\nPID901\nPID909\nPID951\nPID952\nPID955\nPID957\nPID963\nPID970\nPID982\n\n\n\n\n5\n5\n5\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n\n\n\n\npcTab &lt;- pcTab %&gt;%\n  mutate(sampleType = factor(sampleType), \n         patID = factor(patID))\n\n\nadjusted p values\n\n# correlation test and anova\npvalTab &lt;- lapply(batVec, function(fac){\n  print(fac)\n  sapply(colnames(pcRes$x), function(pc){\n    ifelse(fac == \"pelletSize\",\n           cor.test(pcTab[[pc]], pcTab$pelletSize, method = \"kendall\")$p.value,\n           kruskal.test(as.formula(paste0(pc, \"~\", fac)), pcTab)$p.value)\n    }) %&gt;% p.adjust(\"BH\")\n}) %&gt;% do.call(rbind, .)\n\n[1] \"pelletSize\"\n[1] \"sampleType\"\n[1] \"patID\"\n\nrownames(pvalTab) &lt;- batVec\n\n# extract significant pcs\nlogPTab &lt;- pvalTab %&gt;% as_tibble(rownames = \"Batch factor\") %&gt;%\n  pivot_longer(-`Batch factor`, names_to = \"PC\", values_to = \"adj.p-value\") %&gt;%\n  left_join(as_tibble(summary(pcRes)$importance[\"Proportion of Variance\", ] * 100, rownames = \"PC\"), by = c(\"PC\" = \"PC\")) %&gt;%\n  filter(`adj.p-value` &lt; 0.01) %&gt;%\n  separate(col = \"PC\", into = c(\"a\", \"PC\"), sep = \"PC\") %&gt;%\n  select(-a) %&gt;%\n  mutate(PC = factor(PC, levels = sort(as.numeric(unique(PC)))),\n         \"explained variance\" = paste0(PC, \" (\", value, \"%)\"), \n         \"-log(adj.p-value)\" = -log(`adj.p-value`))\n\n# plot\nlogPTab %&gt;%\n  ggplot(aes(x = PC, y = `-log(adj.p-value)`, fill = `Batch factor`, labels = `explained variance`)) +\n  geom_bar(stat = \"identity\") + \n  theme_bw() + \n  theme(axis.text.x = element_text(size = 8), \n        axis.text.y = element_text(size = 10),\n        plot.title = element_text(hjust = 0.5)) +\n  labs(title = bquote(\"Before removing batch: Extracting p-value &lt; 0.01\" ~ bold('without healthy samples'))) + \n  scale_x_discrete(labels = unique(arrange(logPTab, PC)$`explained variance`)) +\n  facet_wrap(~`Batch factor`, ncol = 1)\n\n\n\n\n\n\nbatch correction (no design)\n\ncll_batch &lt;- removeBatchEffect(assay(seCll.imput), \n                               batch = pcTab$pelletSize, \n                               batch2 = pcTab$sampleType)\n\n# perform PCA\npcRes_batch &lt;- prcomp(t(cll_batch), center = TRUE, scale. = TRUE)\n\npcTab_batch &lt;- pcRes_batch$x %&gt;% as_tibble(rownames = \"smpID\") %&gt;%\n  left_join(patTab) %&gt;% \n  mutate(sampleType = factor(ifelse(sampleType %in% c(\"PB\", \"BM aspirate\"), sampleType, \"others\")), \n         patID = factor(patID))\n\nJoining with `by = join_by(smpID)`\n\n# correlation test and anova\npvalTab_batch &lt;- lapply(batVec, function(fac){\n  print(fac)\n  sapply(colnames(pcRes_batch$x), function(pc){\n    ifelse(fac == \"pelletSize\", \n           cor.test(pcTab_batch[[pc]], pcTab_batch$pelletSize, method = \"kendall\")$p.value,\n           kruskal.test(as.formula(paste0(pc, \"~\", fac)), pcTab_batch)$p.value)\n    }) %&gt;% p.adjust(\"BH\")\n}) %&gt;% do.call(rbind, .)\n\n[1] \"pelletSize\"\n[1] \"sampleType\"\n[1] \"patID\"\n\nrownames(pvalTab_batch) &lt;- batVec\n\n# extract significant pcs\nlogPTab_batch &lt;- pvalTab_batch %&gt;% as_tibble(rownames = \"Batch factor\") %&gt;%\n  pivot_longer(-`Batch factor`, names_to = \"PC\", values_to = \"adj.p-value\") %&gt;%\n  left_join(as_tibble(summary(pcRes_batch)$importance[\"Proportion of Variance\", ] * 100, rownames = \"PC\"), by = c(\"PC\" = \"PC\")) %&gt;%\n  filter(`adj.p-value` &lt; 0.01) %&gt;%\n  separate(col = \"PC\", into = c(\"a\", \"PC\"), sep = \"PC\") %&gt;%\n  select(-a) %&gt;%\n  mutate(PC = factor(PC, levels = sort(as.numeric(unique(PC)))),\n         \"explained variance\" = paste0(PC, \" (\", value, \"%)\"), \n         \"-log(adj.p-value)\" = -log(`adj.p-value`))\n\n# plot\nlogPTab_batch %&gt;%\n  ggplot(aes(x = PC, y = `-log(adj.p-value)`, fill = `Batch factor`, labels = `explained variance`)) +\n  geom_bar(stat = \"identity\") + \n  theme_bw() + \n  theme(axis.text.x = element_text(angle = 45, size = 8, vjust = 1, hjust = 1), \n        axis.text.y = element_text(size = 10),\n        plot.title = element_text(hjust = 0.5)) +\n  labs(title = bquote(\"After removing batch: Extracting p-value &lt; 0.01\" ~ bold('without healthy samples'))) + \n  scale_x_discrete(labels = unique(arrange(logPTab_batch, PC)$`explained variance`)) +\n  facet_wrap(~`Batch factor`, ncol = 1)\n\n\n\n\n\n\nboxplot of comparison\n\n# PC6: sampleType significant\nstp_p1 &lt;- pcTab %&gt;%\n  ggplot(aes(x = sampleType, y = PC6, fill = sampleType)) +\n  geom_boxplot() +\n  labs(title = paste0(\"sampleType: p-value is \", format(pvalTab[\"sampleType\", \"PC6\"], digits = 2),\n                      \"\\nbefore batch correction\")) + \n  theme(legend.position = \"none\", plot.title = element_text(hjust = 0.5))\nstp_p2 &lt;- pcTab_batch %&gt;%\n  ggplot(aes(x = sampleType, y = PC6, fill = sampleType)) +\n  geom_boxplot() +\n  labs(title = paste0(\"sampleType: p-value is \", format(pvalTab_batch[\"sampleType\", \"PC6\"], digits = 2),\n                      \"\\nafter batch correction\")) + \n  theme(legend.position = \"none\", plot.title = element_text(hjust = 0.5))\n\ncowplot::plot_grid(stp_p1, stp_p2)\n\n\n\n# PC2: pelletSize significant\npls_p1 &lt;- pcTab %&gt;%\n  ggplot(aes(x = pelletSize, y = PC2)) +\n  geom_point() +\n  labs(title = paste0(\"pelletSize: p-value is \", \n                      format(pvalTab[\"pelletSize\", \"PC2\"], digits = 2),\n                      \"\\nbefore batch correction\")) + \n  theme(legend.position = \"none\", plot.title = element_text(hjust = 0.5))\npls_p2 &lt;- pcTab_batch %&gt;%\n  ggplot(aes(x = pelletSize, y = PC2)) +\n  geom_point() +\n  labs(title = paste0(\"pelletSize: p-value is \", \n                      format(pvalTab_batch[\"pelletSize\", \"PC2\"], digits = 2),\n                      \"\\nafter batch correction\")) + \n  theme(legend.position = \"none\", plot.title = element_text(hjust = 0.5))\n\ncowplot::plot_grid(pls_p1, pls_p2)"
  },
  {
    "objectID": "Diann_QC.html#all-sample-plot",
    "href": "Diann_QC.html#all-sample-plot",
    "title": "Diann_QC",
    "section": "",
    "text": "load(\"output/seDiann.RData\")\ndiagOrd &lt;- colData(seDiann) %&gt;% \n  as_tibble(rownames = \"smpID\") %&gt;% \n  group_by(diag) %&gt;%\n  summarise(n = length(smpID)) %&gt;% \n  arrange(desc(n)) %&gt;%\n  pull(diag)\nsmpAnno &lt;- colData(seDiann) %&gt;% \n  as_tibble(rownames = \"smpID\") %&gt;% \n  mutate(diag = factor(diag, levels = diagOrd))\nsmpAnno &lt;- smpAnno[order(match(smpAnno$diag, diagOrd)), ]\nsmpAnno$ID &lt;- factor(smpAnno$ID, levels = smpAnno$ID)\n\npreData &lt;- assays(seDiann)$log2 %&gt;% as_tibble(rownames = \"protID\") %&gt;%\n  pivot_longer(-protID, names_to = \"smpID\", values_to = \"count\") %&gt;%\n  filter(!is.na(count)) %&gt;%\n  left_join(smpAnno)\n\nJoining with `by = join_by(smpID)`\n\ncusCols &lt;- c(\"#15A371\", \"green\", \"#A8F0BA\", \"blue\", \"#5083D1\", \"#8ECCF5\", \"cyan\", \n             \"#ED1379\", \"maroon1\", \"purple\", \"#AD9490\", \"brown\", \"red\", \"yellow\", \n             \"#E8CF15\", \"#F2D39B\", \"lightsalmon1\", \"antiquewhite\", \"black\")\nggplot(preData, aes(x = ID, y = count, fill = diag)) +\n  geom_bar(stat = \"identity\") +\n  theme(axis.text.x = element_blank(), legend.position = \"bottom\", legend.text = element_text(size = 7)) +\n  guides(fill = guide_legend(nrow = 7, byrow = TRUE)) + scale_fill_manual(values = cusCols)\n\n\n\n\n\npatTab &lt;- colData(seDiann) %&gt;% \n  as_tibble(rownames = \"smpID\") %&gt;%\n  mutate(diagSimple = ifelse(diag %in% c(\"CLL\", \"healthy\", \"MCL\", \"HCL\", \"SMZL\", \"MZL\"), diag, \"other\")) \n\n# diagSimple vs pelletSize\nggplot(patTab, aes(x = diagSimple, y = pelletSize, fill = diagSimple)) +\n  geom_violin(adjust = 1, trim = TRUE, scale = \"width\") + \n  geom_jitter() + theme_bw()\n\n\n\n#  diagSimple vs sampleTpe\ntable(patTab[, c(\"diagSimple\", \"sampleType\")])  %&gt;% as.data.frame() %&gt;%\n  ggpubr::ggballoonplot(fill = \"value\", size.range = c(0, 15)) +\n  scale_fill_viridis_c(option = \"C\")\n\n\n\n# pelletSize vs sampleTpe\nggplot(patTab, aes(x = sampleType, y = pelletSize, fill = sampleType)) +\n  geom_violin(adjust = 1, trim = TRUE, scale = \"width\") + \n  geom_jitter() +\n  theme_bw()\n\nWarning: Groups with fewer than two data points have been dropped.\nGroups with fewer than two data points have been dropped."
  },
  {
    "objectID": "DE.html",
    "href": "DE.html",
    "title": "DE",
    "section": "",
    "text": "load(\"output/seDiann.RData\")\nsmpAnno &lt;- colData(seDiann) %&gt;% \n  as_tibble(rownames = \"smpID\") %&gt;% \n  mutate(diag = factor(diag))\n# filter samples\nseSub &lt;- seDiann[, filter(smpAnno, (diag %in% c(\"CLL\", \"HCL\")) & (sampleType != c(\"Spleen biopsy\")) & (pelletSize &gt; 0.4))$smpID]\n# filter proteins\nseSub &lt;- seSub[rowSums(is.na(assay(seDiann)))/ncol(seDiann) &lt; 0.5, ]\n# normalization\nexprMat.vst &lt;- vsn::justvsn(assays(seSub)$count)\nseSub &lt;- SummarizedExperiment(assays = exprMat.vst, \n                              colData = colData(seSub), \n                              rowData = rowData(seSub))\n\n#imputation\nseSub.imput &lt;- DEP::impute(seSub, \"QRILC\")\n\nWarning in fun(libname, pkgname): mzR has been built against a different Rcpp version (1.0.10)\nthan is installed on your system (1.0.11). This might lead to errors\nwhen loading mzR. If you encounter such issues, please send a report,\nincluding the output of sessionInfo() to the Bioc support forum at \nhttps://support.bioconductor.org/. For details see also\nhttps://github.com/sneumann/mzR/wiki/mzR-Rcpp-compiler-linker-issue.\n\n\nImputing along margin 2 (samples/columns).\n\n# visualisation\ncolData(seSub.imput) %&gt;% \n  as_tibble(rownames = \"smpID\") %&gt;% \n  group_by(diag) %&gt;%\n  summarise(count = length(diag)) %&gt;%\n  ungroup() %&gt;%\n  ggplot(aes(x = diag, y = count, fill = diag)) +\n  geom_bar(stat = \"identity\") +\n  geom_text(aes(label = count), vjust = 1)\n\n\n\npcRes &lt;- prcomp(t(assay(seSub.imput)), center = TRUE, scale. = TRUE)\nplotPc &lt;- pcRes$x %&gt;% \n  as_tibble(rownames = \"smpID\") %&gt;% \n  left_join(smpAnno)\n\nJoining with `by = join_by(smpID)`\n\nplotVar &lt;- as_tibble(round(summary(pcRes)$importance[\"Proportion of Variance\", ] * 100, 2), rownames = \"PC\")\nplotPc %&gt;%\n  ggplot(aes(x = PC1, y = PC2, col = diag)) +\n  geom_point() +\n  labs(x = paste0(\"PC1 (\", plotVar[1, ]$value,\"%)\"), \n       y = paste0(\"PC2 (\", plotVar[2, ]$value,\"%)\"), \n       title = \"CLL vs HCL\")\n\n\n\n\n(\n\n\n\n# train glm with lasso, 3-cv and 50 epochs\ny &lt;- ifelse(colData(seSub.imput)$diag == \"CLL\", 1, 0)\nx &lt;- t(assay(seSub.imput))\ncoefMat &lt;- lapply(1:50, function(n){\n  cv.lasso &lt;- cv.glmnet(x = x,\n                        y = y, \n                        family = \"binomial\",\n                        alpha = 1,\n                        nfolds = 3) #lasso\n  coef(cv.lasso, s = cv.lasso$lambda.min) %&gt;% as.matrix()\n  \n}) %&gt;% do.call(cbind, .)\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\ncolnames(coefMat) &lt;- 1:50\n\n# boxplot\ncoefMat[rowMeans(coefMat) &gt; 0, ] %&gt;%\n  as_tibble(rownames = \"protID\") %&gt;%\n  filter(protID != \"(Intercept)\") %&gt;%\n  pivot_longer(-protID, names_to = \"epoch\", values_to = \"coefficient\") %&gt;%\n  ggplot(aes(x = protID, y = coefficient, fill = protID)) +\n  geom_boxplot() +\n  geom_jitter(size = 0.05) + \n  theme_bw() + \n  theme(axis.text.x = element_text(angle = 90), legend.position = \"none\")\n\n\n\n# barplot\napply(coefMat, 1, function(v){\n  c(mean = mean(v), sd = sd(v))\n}) %&gt;% t() %&gt;%\n  as_tibble(rownames = \"protID\") %&gt;%\n  filter(mean &gt; 0 & protID != \"(Intercept)\") %&gt;%\n  ggplot(aes(x = protID, y = mean, fill = protID)) +\n  geom_bar(stat = \"identity\") +\n  geom_errorbar(aes(ymin = mean-sd, ymax = mean + sd),  width = 0.4) +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90), legend.position = \"none\")"
  },
  {
    "objectID": "DE.html#cll-vs-hcl",
    "href": "DE.html#cll-vs-hcl",
    "title": "DE",
    "section": "",
    "text": "load(\"output/seDiann.RData\")\nsmpAnno &lt;- colData(seDiann) %&gt;% \n  as_tibble(rownames = \"smpID\") %&gt;% \n  mutate(diag = factor(diag))\n# filter samples\nseSub &lt;- seDiann[, filter(smpAnno, (diag %in% c(\"CLL\", \"HCL\")) & (sampleType != c(\"Spleen biopsy\")) & (pelletSize &gt; 0.4))$smpID]\n# filter proteins\nseSub &lt;- seSub[rowSums(is.na(assay(seDiann)))/ncol(seDiann) &lt; 0.5, ]\n# normalization\nexprMat.vst &lt;- vsn::justvsn(assays(seSub)$count)\nseSub &lt;- SummarizedExperiment(assays = exprMat.vst, \n                              colData = colData(seSub), \n                              rowData = rowData(seSub))\n\n#imputation\nseSub.imput &lt;- DEP::impute(seSub, \"QRILC\")\n\nWarning in fun(libname, pkgname): mzR has been built against a different Rcpp version (1.0.10)\nthan is installed on your system (1.0.11). This might lead to errors\nwhen loading mzR. If you encounter such issues, please send a report,\nincluding the output of sessionInfo() to the Bioc support forum at \nhttps://support.bioconductor.org/. For details see also\nhttps://github.com/sneumann/mzR/wiki/mzR-Rcpp-compiler-linker-issue.\n\n\nImputing along margin 2 (samples/columns).\n\n# visualisation\ncolData(seSub.imput) %&gt;% \n  as_tibble(rownames = \"smpID\") %&gt;% \n  group_by(diag) %&gt;%\n  summarise(count = length(diag)) %&gt;%\n  ungroup() %&gt;%\n  ggplot(aes(x = diag, y = count, fill = diag)) +\n  geom_bar(stat = \"identity\") +\n  geom_text(aes(label = count), vjust = 1)\n\n\n\npcRes &lt;- prcomp(t(assay(seSub.imput)), center = TRUE, scale. = TRUE)\nplotPc &lt;- pcRes$x %&gt;% \n  as_tibble(rownames = \"smpID\") %&gt;% \n  left_join(smpAnno)\n\nJoining with `by = join_by(smpID)`\n\nplotVar &lt;- as_tibble(round(summary(pcRes)$importance[\"Proportion of Variance\", ] * 100, 2), rownames = \"PC\")\nplotPc %&gt;%\n  ggplot(aes(x = PC1, y = PC2, col = diag)) +\n  geom_point() +\n  labs(x = paste0(\"PC1 (\", plotVar[1, ]$value,\"%)\"), \n       y = paste0(\"PC2 (\", plotVar[2, ]$value,\"%)\"), \n       title = \"CLL vs HCL\")\n\n\n\n\n(\n\n\n\n# train glm with lasso, 3-cv and 50 epochs\ny &lt;- ifelse(colData(seSub.imput)$diag == \"CLL\", 1, 0)\nx &lt;- t(assay(seSub.imput))\ncoefMat &lt;- lapply(1:50, function(n){\n  cv.lasso &lt;- cv.glmnet(x = x,\n                        y = y, \n                        family = \"binomial\",\n                        alpha = 1,\n                        nfolds = 3) #lasso\n  coef(cv.lasso, s = cv.lasso$lambda.min) %&gt;% as.matrix()\n  \n}) %&gt;% do.call(cbind, .)\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\ncolnames(coefMat) &lt;- 1:50\n\n# boxplot\ncoefMat[rowMeans(coefMat) &gt; 0, ] %&gt;%\n  as_tibble(rownames = \"protID\") %&gt;%\n  filter(protID != \"(Intercept)\") %&gt;%\n  pivot_longer(-protID, names_to = \"epoch\", values_to = \"coefficient\") %&gt;%\n  ggplot(aes(x = protID, y = coefficient, fill = protID)) +\n  geom_boxplot() +\n  geom_jitter(size = 0.05) + \n  theme_bw() + \n  theme(axis.text.x = element_text(angle = 90), legend.position = \"none\")\n\n\n\n# barplot\napply(coefMat, 1, function(v){\n  c(mean = mean(v), sd = sd(v))\n}) %&gt;% t() %&gt;%\n  as_tibble(rownames = \"protID\") %&gt;%\n  filter(mean &gt; 0 & protID != \"(Intercept)\") %&gt;%\n  ggplot(aes(x = protID, y = mean, fill = protID)) +\n  geom_bar(stat = \"identity\") +\n  geom_errorbar(aes(ymin = mean-sd, ymax = mean + sd),  width = 0.4) +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90), legend.position = \"none\")"
  },
  {
    "objectID": "Diann_DE.html",
    "href": "Diann_DE.html",
    "title": "DE",
    "section": "",
    "text": "load(\"output/seDiann.RData\")\nsmpAnno &lt;- colData(seDiann) %&gt;% \n  as_tibble(rownames = \"smpID\") %&gt;% \n  mutate(diag = factor(diag))\n# filter samples\nseSub &lt;- seDiann[, filter(smpAnno, (diag %in% c(\"CLL\", \"HCL\")) & (sampleType != c(\"Spleen biopsy\")) & (pelletSize &gt; 0.4))$smpID]\n# filter proteins\nseSub &lt;- seSub[rowSums(is.na(assay(seDiann)))/ncol(seDiann) &lt; 0.5, ]\n# normalization\nexprMat.vst &lt;- vsn::justvsn(assays(seSub)$count)\nseSub &lt;- SummarizedExperiment(assays = exprMat.vst, \n                              colData = colData(seSub), \n                              rowData = rowData(seSub))\n\n#imputation\nseSub.imput &lt;- DEP::impute(seSub, \"QRILC\")\n\nWarning in fun(libname, pkgname): mzR has been built against a different Rcpp version (1.0.10)\nthan is installed on your system (1.0.11). This might lead to errors\nwhen loading mzR. If you encounter such issues, please send a report,\nincluding the output of sessionInfo() to the Bioc support forum at \nhttps://support.bioconductor.org/. For details see also\nhttps://github.com/sneumann/mzR/wiki/mzR-Rcpp-compiler-linker-issue.\n\n\nImputing along margin 2 (samples/columns).\n\n# visualisation\ncolData(seSub.imput) %&gt;% \n  as_tibble(rownames = \"smpID\") %&gt;% \n  group_by(diag) %&gt;%\n  summarise(count = length(diag)) %&gt;%\n  ungroup() %&gt;%\n  ggplot(aes(x = diag, y = count, fill = diag)) +\n  geom_bar(stat = \"identity\") +\n  geom_text(aes(label = count), vjust = 1)\n\n\n\npcRes &lt;- prcomp(t(assay(seSub.imput)), center = TRUE, scale. = TRUE)\nplotPc &lt;- pcRes$x %&gt;% \n  as_tibble(rownames = \"smpID\") %&gt;% \n  left_join(smpAnno)\n\nJoining with `by = join_by(smpID)`\n\nplotVar &lt;- as_tibble(round(summary(pcRes)$importance[\"Proportion of Variance\", ] * 100, 2), rownames = \"PC\")\nplotPc %&gt;%\n  ggplot(aes(x = PC1, y = PC2, col = diag)) +\n  geom_point() +\n  labs(x = paste0(\"PC1 (\", plotVar[1, ]$value,\"%)\"), \n       y = paste0(\"PC2 (\", plotVar[2, ]$value,\"%)\"), \n       title = \"CLL vs HCL\")\n\n\n\n\n(\n\n\n\n# train glm with lasso, 3-cv and 50 epochs\ny &lt;- ifelse(colData(seSub.imput)$diag == \"CLL\", 1, 0)\nx &lt;- t(assay(seSub.imput))\ncoefMat &lt;- lapply(1:50, function(n){\n  cv.lasso &lt;- cv.glmnet(x = x,\n                        y = y, \n                        family = \"binomial\",\n                        alpha = 1,\n                        nfolds = 3) #lasso\n  coef(cv.lasso, s = cv.lasso$lambda.min) %&gt;% as.matrix()\n  \n}) %&gt;% do.call(cbind, .)\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\ncolnames(coefMat) &lt;- 1:50\n\n# boxplot\ncoefMat[rowMeans(coefMat) &gt; 0, ] %&gt;%\n  as_tibble(rownames = \"protID\") %&gt;%\n  filter(protID != \"(Intercept)\") %&gt;%\n  pivot_longer(-protID, names_to = \"epoch\", values_to = \"coefficient\") %&gt;%\n  ggplot(aes(x = protID, y = coefficient, fill = protID)) +\n  geom_boxplot() +\n  geom_jitter(size = 0.05) + \n  theme_bw() + \n  theme(axis.text.x = element_text(angle = 90), legend.position = \"none\")\n\n\n\n# barplot\napply(coefMat, 1, function(v){\n  c(mean = mean(v), sd = sd(v))\n}) %&gt;% t() %&gt;%\n  as_tibble(rownames = \"protID\") %&gt;%\n  filter(mean &gt; 0 & protID != \"(Intercept)\") %&gt;%\n  ggplot(aes(x = protID, y = mean, fill = protID)) +\n  geom_bar(stat = \"identity\") +\n  geom_errorbar(aes(ymin = mean-sd, ymax = mean + sd),  width = 0.4) +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90), legend.position = \"none\")"
  },
  {
    "objectID": "Diann_DE.html#cll-vs-hcl",
    "href": "Diann_DE.html#cll-vs-hcl",
    "title": "DE",
    "section": "",
    "text": "load(\"output/seDiann.RData\")\nsmpAnno &lt;- colData(seDiann) %&gt;% \n  as_tibble(rownames = \"smpID\") %&gt;% \n  mutate(diag = factor(diag))\n# filter samples\nseSub &lt;- seDiann[, filter(smpAnno, (diag %in% c(\"CLL\", \"HCL\")) & (sampleType != c(\"Spleen biopsy\")) & (pelletSize &gt; 0.4))$smpID]\n# filter proteins\nseSub &lt;- seSub[rowSums(is.na(assay(seDiann)))/ncol(seDiann) &lt; 0.5, ]\n# normalization\nexprMat.vst &lt;- vsn::justvsn(assays(seSub)$count)\nseSub &lt;- SummarizedExperiment(assays = exprMat.vst, \n                              colData = colData(seSub), \n                              rowData = rowData(seSub))\n\n#imputation\nseSub.imput &lt;- DEP::impute(seSub, \"QRILC\")\n\nWarning in fun(libname, pkgname): mzR has been built against a different Rcpp version (1.0.10)\nthan is installed on your system (1.0.11). This might lead to errors\nwhen loading mzR. If you encounter such issues, please send a report,\nincluding the output of sessionInfo() to the Bioc support forum at \nhttps://support.bioconductor.org/. For details see also\nhttps://github.com/sneumann/mzR/wiki/mzR-Rcpp-compiler-linker-issue.\n\n\nImputing along margin 2 (samples/columns).\n\n# visualisation\ncolData(seSub.imput) %&gt;% \n  as_tibble(rownames = \"smpID\") %&gt;% \n  group_by(diag) %&gt;%\n  summarise(count = length(diag)) %&gt;%\n  ungroup() %&gt;%\n  ggplot(aes(x = diag, y = count, fill = diag)) +\n  geom_bar(stat = \"identity\") +\n  geom_text(aes(label = count), vjust = 1)\n\n\n\npcRes &lt;- prcomp(t(assay(seSub.imput)), center = TRUE, scale. = TRUE)\nplotPc &lt;- pcRes$x %&gt;% \n  as_tibble(rownames = \"smpID\") %&gt;% \n  left_join(smpAnno)\n\nJoining with `by = join_by(smpID)`\n\nplotVar &lt;- as_tibble(round(summary(pcRes)$importance[\"Proportion of Variance\", ] * 100, 2), rownames = \"PC\")\nplotPc %&gt;%\n  ggplot(aes(x = PC1, y = PC2, col = diag)) +\n  geom_point() +\n  labs(x = paste0(\"PC1 (\", plotVar[1, ]$value,\"%)\"), \n       y = paste0(\"PC2 (\", plotVar[2, ]$value,\"%)\"), \n       title = \"CLL vs HCL\")\n\n\n\n\n(\n\n\n\n# train glm with lasso, 3-cv and 50 epochs\ny &lt;- ifelse(colData(seSub.imput)$diag == \"CLL\", 1, 0)\nx &lt;- t(assay(seSub.imput))\ncoefMat &lt;- lapply(1:50, function(n){\n  cv.lasso &lt;- cv.glmnet(x = x,\n                        y = y, \n                        family = \"binomial\",\n                        alpha = 1,\n                        nfolds = 3) #lasso\n  coef(cv.lasso, s = cv.lasso$lambda.min) %&gt;% as.matrix()\n  \n}) %&gt;% do.call(cbind, .)\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\nWarning in lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, : one\nmultinomial or binomial class has fewer than 8 observations; dangerous ground\n\ncolnames(coefMat) &lt;- 1:50\n\n# boxplot\ncoefMat[rowMeans(coefMat) &gt; 0, ] %&gt;%\n  as_tibble(rownames = \"protID\") %&gt;%\n  filter(protID != \"(Intercept)\") %&gt;%\n  pivot_longer(-protID, names_to = \"epoch\", values_to = \"coefficient\") %&gt;%\n  ggplot(aes(x = protID, y = coefficient, fill = protID)) +\n  geom_boxplot() +\n  geom_jitter(size = 0.05) + \n  theme_bw() + \n  theme(axis.text.x = element_text(angle = 90), legend.position = \"none\")\n\n\n\n# barplot\napply(coefMat, 1, function(v){\n  c(mean = mean(v), sd = sd(v))\n}) %&gt;% t() %&gt;%\n  as_tibble(rownames = \"protID\") %&gt;%\n  filter(mean &gt; 0 & protID != \"(Intercept)\") %&gt;%\n  ggplot(aes(x = protID, y = mean, fill = protID)) +\n  geom_bar(stat = \"identity\") +\n  geom_errorbar(aes(ymin = mean-sd, ymax = mean + sd),  width = 0.4) +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90), legend.position = \"none\")"
  }
]